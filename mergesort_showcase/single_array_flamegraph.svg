<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="918" onload="init(evt)" viewBox="0 0 1200 918" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="918" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="901.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="901.00"> </text><svg id="frames" x="10" width="1180" total_samples="161046584350"><g><title>_start (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="837" width="0.0113%" height="15" fill="rgb(227,0,7)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="847.50"></text></g><g><title>_dl_start (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="821" width="0.0113%" height="15" fill="rgb(217,0,24)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="831.50"></text></g><g><title>_dl_sysdep_start (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="805" width="0.0113%" height="15" fill="rgb(221,193,54)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="815.50"></text></g><g><title>dl_main (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="789" width="0.0113%" height="15" fill="rgb(248,212,6)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="799.50"></text></g><g><title>_dl_map_object_deps (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="773" width="0.0113%" height="15" fill="rgb(208,68,35)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="783.50"></text></g><g><title>_dl_catch_exception (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="757" width="0.0113%" height="15" fill="rgb(232,128,0)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="767.50"></text></g><g><title>openaux (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="741" width="0.0113%" height="15" fill="rgb(207,160,47)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="751.50"></text></g><g><title>_dl_map_object (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="725" width="0.0113%" height="15" fill="rgb(228,23,34)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="735.50"></text></g><g><title>_dl_map_object_from_fd (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="709" width="0.0113%" height="15" fill="rgb(218,30,26)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="719.50"></text></g><g><title>asm_exc_page_fault (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="693" width="0.0113%" height="15" fill="rgb(220,122,19)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="703.50"></text></g><g><title>exc_page_fault (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="677" width="0.0113%" height="15" fill="rgb(250,228,42)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="687.50"></text></g><g><title>do_user_addr_fault (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="661" width="0.0113%" height="15" fill="rgb(240,193,28)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="671.50"></text></g><g><title>handle_mm_fault (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="645" width="0.0113%" height="15" fill="rgb(216,20,37)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="655.50"></text></g><g><title>__handle_mm_fault (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="629" width="0.0113%" height="15" fill="rgb(206,188,39)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="639.50"></text></g><g><title>handle_pte_fault (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="613" width="0.0113%" height="15" fill="rgb(217,207,13)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="623.50"></text></g><g><title>do_wp_page (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="597" width="0.0113%" height="15" fill="rgb(231,73,38)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="607.50"></text></g><g><title>wp_page_copy (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="581" width="0.0113%" height="15" fill="rgb(225,20,46)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="591.50"></text></g><g><title>copy_mc_enhanced_fast_string (18,145,267 samples, 0.01%)</title><rect x="0.0630%" y="565" width="0.0113%" height="15" fill="rgb(210,31,41)" fg:x="101432493" fg:w="18145267"/><text x="0.3130%" y="575.50"></text></g><g><title>ossl_asn1_template_free (19,077,742 samples, 0.01%)</title><rect x="0.1047%" y="837" width="0.0118%" height="15" fill="rgb(221,200,47)" fg:x="168555885" fg:w="19077742"/><text x="0.3547%" y="847.50"></text></g><g><title>cargo (198,557,833 samples, 0.12%)</title><rect x="0.0000%" y="853" width="0.1233%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="198557833"/><text x="0.2500%" y="863.50"></text></g><g><title>[[heap]] (18,519,902 samples, 0.01%)</title><rect x="0.1233%" y="837" width="0.0115%" height="15" fill="rgb(249,33,26)" fg:x="198557833" fg:w="18519902"/><text x="0.3733%" y="847.50"></text></g><g><title>rand_chacha::guts::refill_wide (18,519,902 samples, 0.01%)</title><rect x="0.1233%" y="821" width="0.0115%" height="15" fill="rgb(235,183,28)" fg:x="198557833" fg:w="18519902"/><text x="0.3733%" y="831.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (18,066,347 samples, 0.01%)</title><rect x="0.1447%" y="821" width="0.0112%" height="15" fill="rgb(221,5,38)" fg:x="233067365" fg:w="18066347"/><text x="0.3947%" y="831.50"></text></g><g><title>[anon] (22,792,502 samples, 0.01%)</title><rect x="0.1446%" y="837" width="0.0142%" height="15" fill="rgb(247,18,42)" fg:x="232900119" fg:w="22792502"/><text x="0.3946%" y="847.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (7,980,550,588 samples, 4.96%)</title><rect x="0.1607%" y="821" width="4.9554%" height="15" fill="rgb(241,131,45)" fg:x="258866502" fg:w="7980550588"/><text x="0.4107%" y="831.50">merges..</text></g><g><title>[unknown] (7,992,476,540 samples, 4.96%)</title><rect x="0.1588%" y="837" width="4.9628%" height="15" fill="rgb(249,31,29)" fg:x="255692621" fg:w="7992476540"/><text x="0.4088%" y="847.50">[unkno..</text></g><g><title>__irqentry_text_end (324,149,697 samples, 0.20%)</title><rect x="6.5820%" y="613" width="0.2013%" height="15" fill="rgb(225,111,53)" fg:x="10600075128" fg:w="324149697"/><text x="6.8320%" y="623.50"></text></g><g><title>down_read_trylock (20,395,216 samples, 0.01%)</title><rect x="6.8260%" y="565" width="0.0127%" height="15" fill="rgb(238,160,17)" fg:x="10992986675" fg:w="20395216"/><text x="7.0760%" y="575.50"></text></g><g><title>_raw_spin_lock (16,868,537 samples, 0.01%)</title><rect x="6.9371%" y="517" width="0.0105%" height="15" fill="rgb(214,148,48)" fg:x="11172021603" fg:w="16868537"/><text x="7.1871%" y="527.50"></text></g><g><title>mem_cgroup_charge_statistics.constprop.0 (83,893,464 samples, 0.05%)</title><rect x="6.9844%" y="469" width="0.0521%" height="15" fill="rgb(232,36,49)" fg:x="11248179534" fg:w="83893464"/><text x="7.2344%" y="479.50"></text></g><g><title>cgroup_rstat_updated (69,452,295 samples, 0.04%)</title><rect x="6.9934%" y="453" width="0.0431%" height="15" fill="rgb(209,103,24)" fg:x="11262620703" fg:w="69452295"/><text x="7.2434%" y="463.50"></text></g><g><title>charge_memcg (118,455,449 samples, 0.07%)</title><rect x="6.9756%" y="485" width="0.0736%" height="15" fill="rgb(229,88,8)" fg:x="11233895813" fg:w="118455449"/><text x="7.2256%" y="495.50"></text></g><g><title>try_charge_memcg (20,278,264 samples, 0.01%)</title><rect x="7.0365%" y="469" width="0.0126%" height="15" fill="rgb(213,181,19)" fg:x="11332072998" fg:w="20278264"/><text x="7.2865%" y="479.50"></text></g><g><title>__mem_cgroup_charge (125,076,704 samples, 0.08%)</title><rect x="6.9756%" y="501" width="0.0777%" height="15" fill="rgb(254,191,54)" fg:x="11233895813" fg:w="125076704"/><text x="7.2256%" y="511.50"></text></g><g><title>clear_page_erms (203,172,368 samples, 0.13%)</title><rect x="7.1130%" y="453" width="0.1262%" height="15" fill="rgb(241,83,37)" fg:x="11455251781" fg:w="203172368"/><text x="7.3630%" y="463.50"></text></g><g><title>get_page_from_freelist (356,595,883 samples, 0.22%)</title><rect x="7.0932%" y="469" width="0.2214%" height="15" fill="rgb(233,36,39)" fg:x="11423350086" fg:w="356595883"/><text x="7.3432%" y="479.50"></text></g><g><title>rmqueue (119,376,506 samples, 0.07%)</title><rect x="7.2405%" y="453" width="0.0741%" height="15" fill="rgb(226,3,54)" fg:x="11660569463" fg:w="119376506"/><text x="7.4905%" y="463.50"></text></g><g><title>rmqueue_bulk (112,184,070 samples, 0.07%)</title><rect x="7.2450%" y="437" width="0.0697%" height="15" fill="rgb(245,192,40)" fg:x="11667761899" fg:w="112184070"/><text x="7.4950%" y="447.50"></text></g><g><title>__alloc_pages (391,299,495 samples, 0.24%)</title><rect x="7.0741%" y="485" width="0.2430%" height="15" fill="rgb(238,167,29)" fg:x="11392623431" fg:w="391299495"/><text x="7.3241%" y="495.50"></text></g><g><title>alloc_pages_vma (414,016,323 samples, 0.26%)</title><rect x="7.0622%" y="501" width="0.2571%" height="15" fill="rgb(232,182,51)" fg:x="11373409230" fg:w="414016323"/><text x="7.3122%" y="511.50"></text></g><g><title>__pagevec_lru_add_fn (77,371,231 samples, 0.05%)</title><rect x="7.3406%" y="453" width="0.0480%" height="15" fill="rgb(231,60,39)" fg:x="11821772989" fg:w="77371231"/><text x="7.5906%" y="463.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (111,411,401 samples, 0.07%)</title><rect x="7.3261%" y="501" width="0.0692%" height="15" fill="rgb(208,69,12)" fg:x="11798442060" fg:w="111411401"/><text x="7.5761%" y="511.50"></text></g><g><title>lru_cache_add (107,775,030 samples, 0.07%)</title><rect x="7.3284%" y="485" width="0.0669%" height="15" fill="rgb(235,93,37)" fg:x="11802078431" fg:w="107775030"/><text x="7.5784%" y="495.50"></text></g><g><title>__pagevec_lru_add (98,649,012 samples, 0.06%)</title><rect x="7.3340%" y="469" width="0.0613%" height="15" fill="rgb(213,116,39)" fg:x="11811204449" fg:w="98649012"/><text x="7.5840%" y="479.50"></text></g><g><title>__mod_lruvec_page_state (35,816,243 samples, 0.02%)</title><rect x="7.3995%" y="485" width="0.0222%" height="15" fill="rgb(222,207,29)" fg:x="11916574403" fg:w="35816243"/><text x="7.6495%" y="495.50"></text></g><g><title>__mod_lruvec_state (18,201,374 samples, 0.01%)</title><rect x="7.4104%" y="469" width="0.0113%" height="15" fill="rgb(206,96,30)" fg:x="11934189272" fg:w="18201374"/><text x="7.6604%" y="479.50"></text></g><g><title>page_add_new_anon_rmap (44,322,809 samples, 0.03%)</title><rect x="7.3974%" y="501" width="0.0275%" height="15" fill="rgb(218,138,4)" fg:x="11913319274" fg:w="44322809"/><text x="7.6474%" y="511.50"></text></g><g><title>do_anonymous_page (776,232,275 samples, 0.48%)</title><rect x="6.9476%" y="517" width="0.4820%" height="15" fill="rgb(250,191,14)" fg:x="11188890140" fg:w="776232275"/><text x="7.1976%" y="527.50"></text></g><g><title>handle_pte_fault (846,925,955 samples, 0.53%)</title><rect x="6.9234%" y="533" width="0.5259%" height="15" fill="rgb(239,60,40)" fg:x="11149907868" fg:w="846925955"/><text x="7.1734%" y="543.50"></text></g><g><title>__handle_mm_fault (931,237,226 samples, 0.58%)</title><rect x="6.8779%" y="549" width="0.5782%" height="15" fill="rgb(206,27,48)" fg:x="11076561708" fg:w="931237226"/><text x="7.1279%" y="559.50"></text></g><g><title>handle_mm_fault (994,484,679 samples, 0.62%)</title><rect x="6.8463%" y="565" width="0.6175%" height="15" fill="rgb(225,35,8)" fg:x="11025772217" fg:w="994484679"/><text x="7.0963%" y="575.50"></text></g><g><title>do_user_addr_fault (1,072,190,371 samples, 0.67%)</title><rect x="6.8046%" y="581" width="0.6658%" height="15" fill="rgb(250,213,24)" fg:x="10958534498" fg:w="1072190371"/><text x="7.0546%" y="591.50"></text></g><g><title>exit_to_user_mode_prepare (16,857,201 samples, 0.01%)</title><rect x="7.4740%" y="549" width="0.0105%" height="15" fill="rgb(247,123,22)" fg:x="12036604254" fg:w="16857201"/><text x="7.7240%" y="559.50"></text></g><g><title>irqentry_exit (22,190,899 samples, 0.01%)</title><rect x="7.4722%" y="581" width="0.0138%" height="15" fill="rgb(231,138,38)" fg:x="12033646954" fg:w="22190899"/><text x="7.7222%" y="591.50"></text></g><g><title>irqentry_exit_to_user_mode (22,190,899 samples, 0.01%)</title><rect x="7.4722%" y="565" width="0.0138%" height="15" fill="rgb(231,145,46)" fg:x="12033646954" fg:w="22190899"/><text x="7.7222%" y="575.50"></text></g><g><title>asm_exc_page_fault (1,134,851,166 samples, 0.70%)</title><rect x="6.7833%" y="613" width="0.7047%" height="15" fill="rgb(251,118,11)" fg:x="10924224825" fg:w="1134851166"/><text x="7.0333%" y="623.50"></text></g><g><title>exc_page_fault (1,126,587,308 samples, 0.70%)</title><rect x="6.7884%" y="597" width="0.6995%" height="15" fill="rgb(217,147,25)" fg:x="10932488683" fg:w="1126587308"/><text x="7.0384%" y="607.50"></text></g><g><title>error_entry (157,876,175 samples, 0.10%)</title><rect x="7.4921%" y="613" width="0.0980%" height="15" fill="rgb(247,81,37)" fg:x="12065831519" fg:w="157876175"/><text x="7.7421%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (27,165,922 samples, 0.02%)</title><rect x="7.6061%" y="565" width="0.0169%" height="15" fill="rgb(209,12,38)" fg:x="12249406508" fg:w="27165922"/><text x="7.8561%" y="575.50"></text></g><g><title>do_syscall_64 (17,004,404 samples, 0.01%)</title><rect x="7.6124%" y="549" width="0.0106%" height="15" fill="rgb(227,1,9)" fg:x="12259568026" fg:w="17004404"/><text x="7.8624%" y="559.50"></text></g><g><title>x64_sys_call (17,004,404 samples, 0.01%)</title><rect x="7.6124%" y="533" width="0.0106%" height="15" fill="rgb(248,47,43)" fg:x="12259568026" fg:w="17004404"/><text x="7.8624%" y="543.50"></text></g><g><title>__x64_sys_getrandom (17,004,404 samples, 0.01%)</title><rect x="7.6124%" y="517" width="0.0106%" height="15" fill="rgb(221,10,30)" fg:x="12259568026" fg:w="17004404"/><text x="7.8624%" y="527.50"></text></g><g><title>get_random_bytes_user (17,004,404 samples, 0.01%)</title><rect x="7.6124%" y="501" width="0.0106%" height="15" fill="rgb(210,229,1)" fg:x="12259568026" fg:w="17004404"/><text x="7.8624%" y="511.50"></text></g><g><title>rand::rngs::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (58,168,379 samples, 0.04%)</title><rect x="7.6038%" y="613" width="0.0361%" height="15" fill="rgb(222,148,37)" fg:x="12245609226" fg:w="58168379"/><text x="7.8538%" y="623.50"></text></g><g><title>rand_core::SeedableRng::try_from_rng (58,168,379 samples, 0.04%)</title><rect x="7.6038%" y="597" width="0.0361%" height="15" fill="rgb(234,67,33)" fg:x="12245609226" fg:w="58168379"/><text x="7.8538%" y="607.50"></text></g><g><title>__GI___getrandom (58,168,379 samples, 0.04%)</title><rect x="7.6038%" y="581" width="0.0361%" height="15" fill="rgb(247,98,35)" fg:x="12245609226" fg:w="58168379"/><text x="7.8538%" y="591.50"></text></g><g><title>syscall_return_via_sysret (18,974,112 samples, 0.01%)</title><rect x="7.6281%" y="565" width="0.0118%" height="15" fill="rgb(247,138,52)" fg:x="12284803493" fg:w="18974112"/><text x="7.8781%" y="575.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (1,679,077,414 samples, 1.04%)</title><rect x="7.6438%" y="613" width="1.0426%" height="15" fill="rgb(213,79,30)" fg:x="12310009421" fg:w="1679077414"/><text x="7.8938%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,829,854,530 samples, 3.62%)</title><rect x="5.1230%" y="629" width="3.6200%" height="15" fill="rgb(246,177,23)" fg:x="8250418042" fg:w="5829854530"/><text x="5.3730%" y="639.50">&lt;all..</text></g><g><title>sync_regs (91,185,737 samples, 0.06%)</title><rect x="8.6864%" y="613" width="0.0566%" height="15" fill="rgb(230,62,27)" fg:x="13989086835" fg:w="91185737"/><text x="8.9364%" y="623.50"></text></g><g><title>__irqentry_text_end (45,831,396 samples, 0.03%)</title><rect x="22.9988%" y="197" width="0.0285%" height="15" fill="rgb(216,154,8)" fg:x="37038805805" fg:w="45831396"/><text x="23.2488%" y="207.50"></text></g><g><title>charge_memcg (17,820,945 samples, 0.01%)</title><rect x="23.0635%" y="69" width="0.0111%" height="15" fill="rgb(244,35,45)" fg:x="37143048782" fg:w="17820945"/><text x="23.3135%" y="79.50"></text></g><g><title>__mem_cgroup_charge (31,654,003 samples, 0.02%)</title><rect x="23.0600%" y="85" width="0.0197%" height="15" fill="rgb(251,115,12)" fg:x="37137303810" fg:w="31654003"/><text x="23.3100%" y="95.50"></text></g><g><title>clear_page_erms (40,124,732 samples, 0.02%)</title><rect x="23.0955%" y="37" width="0.0249%" height="15" fill="rgb(240,54,50)" fg:x="37194567900" fg:w="40124732"/><text x="23.3455%" y="47.50"></text></g><g><title>get_page_from_freelist (61,478,681 samples, 0.04%)</title><rect x="23.0938%" y="53" width="0.0382%" height="15" fill="rgb(233,84,52)" fg:x="37191824272" fg:w="61478681"/><text x="23.3438%" y="63.50"></text></g><g><title>__alloc_pages (72,682,734 samples, 0.05%)</title><rect x="23.0878%" y="69" width="0.0451%" height="15" fill="rgb(207,117,47)" fg:x="37182068927" fg:w="72682734"/><text x="23.3378%" y="79.50"></text></g><g><title>alloc_pages_vma (80,095,199 samples, 0.05%)</title><rect x="23.0846%" y="85" width="0.0497%" height="15" fill="rgb(249,43,39)" fg:x="37176951805" fg:w="80095199"/><text x="23.3346%" y="95.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (19,494,296 samples, 0.01%)</title><rect x="23.1356%" y="85" width="0.0121%" height="15" fill="rgb(209,38,44)" fg:x="37259030344" fg:w="19494296"/><text x="23.3856%" y="95.50"></text></g><g><title>lru_cache_add (17,831,945 samples, 0.01%)</title><rect x="23.1366%" y="69" width="0.0111%" height="15" fill="rgb(236,212,23)" fg:x="37260692695" fg:w="17831945"/><text x="23.3866%" y="79.50"></text></g><g><title>do_anonymous_page (169,506,470 samples, 0.11%)</title><rect x="23.0514%" y="101" width="0.1053%" height="15" fill="rgb(242,79,21)" fg:x="37123537532" fg:w="169506470"/><text x="23.3014%" y="111.50"></text></g><g><title>handle_pte_fault (174,131,046 samples, 0.11%)</title><rect x="23.0491%" y="117" width="0.1081%" height="15" fill="rgb(211,96,35)" fg:x="37119769364" fg:w="174131046"/><text x="23.2991%" y="127.50"></text></g><g><title>__handle_mm_fault (181,758,897 samples, 0.11%)</title><rect x="23.0456%" y="133" width="0.1129%" height="15" fill="rgb(253,215,40)" fg:x="37114193350" fg:w="181758897"/><text x="23.2956%" y="143.50"></text></g><g><title>handle_mm_fault (195,980,931 samples, 0.12%)</title><rect x="23.0405%" y="149" width="0.1217%" height="15" fill="rgb(211,81,21)" fg:x="37106007178" fg:w="195980931"/><text x="23.2905%" y="159.50"></text></g><g><title>do_user_addr_fault (219,276,630 samples, 0.14%)</title><rect x="23.0297%" y="165" width="0.1362%" height="15" fill="rgb(208,190,38)" fg:x="37088499686" fg:w="219276630"/><text x="23.2797%" y="175.50"></text></g><g><title>asm_exc_page_fault (233,754,186 samples, 0.15%)</title><rect x="23.0273%" y="197" width="0.1451%" height="15" fill="rgb(235,213,38)" fg:x="37084637201" fg:w="233754186"/><text x="23.2773%" y="207.50"></text></g><g><title>exc_page_fault (229,891,701 samples, 0.14%)</title><rect x="23.0297%" y="181" width="0.1427%" height="15" fill="rgb(237,122,38)" fg:x="37088499686" fg:w="229891701"/><text x="23.2797%" y="191.50"></text></g><g><title>error_entry (35,413,509 samples, 0.02%)</title><rect x="23.1789%" y="197" width="0.0220%" height="15" fill="rgb(244,218,35)" fg:x="37328770522" fg:w="35413509"/><text x="23.4289%" y="207.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (49,421,443 samples, 0.03%)</title><rect x="23.2009%" y="197" width="0.0307%" height="15" fill="rgb(240,68,47)" fg:x="37364184031" fg:w="49421443"/><text x="23.4509%" y="207.50"></text></g><g><title>&lt;mergesort_showcase::single_array_sort::SingleArray as mergesort_showcase::Sort&gt;::sort (23,363,322,513 samples, 14.51%)</title><rect x="8.7430%" y="629" width="14.5072%" height="15" fill="rgb(210,16,53)" fg:x="14080272572" fg:w="23363322513"/><text x="8.9930%" y="639.50">&lt;mergesort_showcase::s..</text></g><g><title>mergesort_showcase::single_array_sort::_merge_sort_parallel (23,357,630,651 samples, 14.50%)</title><rect x="8.7465%" y="613" width="14.5036%" height="15" fill="rgb(235,124,12)" fg:x="14085964434" fg:w="23357630651"/><text x="8.9965%" y="623.50">mergesort_showcase::si..</text></g><g><title>std::thread::scoped::scope (18,464,671,366 samples, 11.47%)</title><rect x="11.7847%" y="597" width="11.4654%" height="15" fill="rgb(224,169,11)" fg:x="18978923719" fg:w="18464671366"/><text x="12.0347%" y="607.50">std::thread::scop..</text></g><g><title>mergesort_showcase::single_array_sort::_merge_sort_parallel (18,464,671,366 samples, 11.47%)</title><rect x="11.7847%" y="581" width="11.4654%" height="15" fill="rgb(250,166,2)" fg:x="18978923719" fg:w="18464671366"/><text x="12.0347%" y="591.50">mergesort_showcas..</text></g><g><title>std::thread::scoped::scope (15,994,884,458 samples, 9.93%)</title><rect x="13.3183%" y="565" width="9.9318%" height="15" fill="rgb(242,216,29)" fg:x="21448710627" fg:w="15994884458"/><text x="13.5683%" y="575.50">std::thread::s..</text></g><g><title>mergesort_showcase::single_array_sort::_merge_sort_parallel (15,994,884,458 samples, 9.93%)</title><rect x="13.3183%" y="549" width="9.9318%" height="15" fill="rgb(230,116,27)" fg:x="21448710627" fg:w="15994884458"/><text x="13.5683%" y="559.50">mergesort_show..</text></g><g><title>std::thread::scoped::scope (14,686,938,623 samples, 9.12%)</title><rect x="14.1305%" y="533" width="9.1197%" height="15" fill="rgb(228,99,48)" fg:x="22756656462" fg:w="14686938623"/><text x="14.3805%" y="543.50">std::thread::..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (14,686,938,623 samples, 9.12%)</title><rect x="14.1305%" y="517" width="9.1197%" height="15" fill="rgb(253,11,6)" fg:x="22756656462" fg:w="14686938623"/><text x="14.3805%" y="527.50">mergesort_sho..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (14,078,926,796 samples, 8.74%)</title><rect x="14.5080%" y="501" width="8.7421%" height="15" fill="rgb(247,143,39)" fg:x="23364668289" fg:w="14078926796"/><text x="14.7580%" y="511.50">mergesort_sh..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (13,469,891,156 samples, 8.36%)</title><rect x="14.8862%" y="485" width="8.3640%" height="15" fill="rgb(236,97,10)" fg:x="23973703929" fg:w="13469891156"/><text x="15.1362%" y="495.50">mergesort_sh..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (12,864,737,891 samples, 7.99%)</title><rect x="15.2620%" y="469" width="7.9882%" height="15" fill="rgb(233,208,19)" fg:x="24578857194" fg:w="12864737891"/><text x="15.5120%" y="479.50">mergesort_s..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (12,310,630,215 samples, 7.64%)</title><rect x="15.6060%" y="453" width="7.6441%" height="15" fill="rgb(216,164,2)" fg:x="25132964870" fg:w="12310630215"/><text x="15.8560%" y="463.50">mergesort_..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (11,733,028,570 samples, 7.29%)</title><rect x="15.9647%" y="437" width="7.2855%" height="15" fill="rgb(220,129,5)" fg:x="25710566515" fg:w="11733028570"/><text x="16.2147%" y="447.50">mergesort_..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (11,140,784,325 samples, 6.92%)</title><rect x="16.3324%" y="421" width="6.9177%" height="15" fill="rgb(242,17,10)" fg:x="26302810760" fg:w="11140784325"/><text x="16.5824%" y="431.50">mergesort..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (10,558,284,050 samples, 6.56%)</title><rect x="16.6941%" y="405" width="6.5560%" height="15" fill="rgb(242,107,0)" fg:x="26885311035" fg:w="10558284050"/><text x="16.9441%" y="415.50">mergesort..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (9,937,830,769 samples, 6.17%)</title><rect x="17.0794%" y="389" width="6.1708%" height="15" fill="rgb(251,28,31)" fg:x="27505764316" fg:w="9937830769"/><text x="17.3294%" y="399.50">mergesor..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (9,350,799,850 samples, 5.81%)</title><rect x="17.4439%" y="373" width="5.8063%" height="15" fill="rgb(233,223,10)" fg:x="28092795235" fg:w="9350799850"/><text x="17.6939%" y="383.50">mergeso..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (8,738,424,957 samples, 5.43%)</title><rect x="17.8241%" y="357" width="5.4260%" height="15" fill="rgb(215,21,27)" fg:x="28705170128" fg:w="8738424957"/><text x="18.0741%" y="367.50">mergeso..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (8,135,292,726 samples, 5.05%)</title><rect x="18.1986%" y="341" width="5.0515%" height="15" fill="rgb(232,23,21)" fg:x="29308302359" fg:w="8135292726"/><text x="18.4486%" y="351.50">merges..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (7,616,352,204 samples, 4.73%)</title><rect x="18.5209%" y="325" width="4.7293%" height="15" fill="rgb(244,5,23)" fg:x="29827242881" fg:w="7616352204"/><text x="18.7709%" y="335.50">merges..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (7,013,795,315 samples, 4.36%)</title><rect x="18.8950%" y="309" width="4.3551%" height="15" fill="rgb(226,81,46)" fg:x="30429799770" fg:w="7013795315"/><text x="19.1450%" y="319.50">merge..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (6,421,763,421 samples, 3.99%)</title><rect x="19.2626%" y="293" width="3.9875%" height="15" fill="rgb(247,70,30)" fg:x="31021831664" fg:w="6421763421"/><text x="19.5126%" y="303.50">merg..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (5,722,234,779 samples, 3.55%)</title><rect x="19.6970%" y="277" width="3.5532%" height="15" fill="rgb(212,68,19)" fg:x="31721360306" fg:w="5722234779"/><text x="19.9470%" y="287.50">merg..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (4,979,997,429 samples, 3.09%)</title><rect x="20.1579%" y="261" width="3.0923%" height="15" fill="rgb(240,187,13)" fg:x="32463597656" fg:w="4979997429"/><text x="20.4079%" y="271.50">mer..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (4,194,408,536 samples, 2.60%)</title><rect x="20.6457%" y="245" width="2.6045%" height="15" fill="rgb(223,113,26)" fg:x="33249186549" fg:w="4194408536"/><text x="20.8957%" y="255.50">me..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (3,312,445,251 samples, 2.06%)</title><rect x="21.1933%" y="229" width="2.0568%" height="15" fill="rgb(206,192,2)" fg:x="34131149834" fg:w="3312445251"/><text x="21.4433%" y="239.50">m..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (2,046,714,947 samples, 1.27%)</title><rect x="21.9793%" y="213" width="1.2709%" height="15" fill="rgb(241,108,4)" fg:x="35396880138" fg:w="2046714947"/><text x="22.2293%" y="223.50"></text></g><g><title>sync_regs (29,989,611 samples, 0.02%)</title><rect x="23.2315%" y="197" width="0.0186%" height="15" fill="rgb(247,173,49)" fg:x="37413605474" fg:w="29989611"/><text x="23.4815%" y="207.50"></text></g><g><title>free_unref_page_list (99,230,794 samples, 0.06%)</title><rect x="23.2867%" y="373" width="0.0616%" height="15" fill="rgb(224,114,35)" fg:x="37502495947" fg:w="99230794"/><text x="23.5367%" y="383.50"></text></g><g><title>free_unref_page_commit.constprop.0 (74,075,942 samples, 0.05%)</title><rect x="23.3024%" y="357" width="0.0460%" height="15" fill="rgb(245,159,27)" fg:x="37527650799" fg:w="74075942"/><text x="23.5524%" y="367.50"></text></g><g><title>free_pcppages_bulk (64,560,637 samples, 0.04%)</title><rect x="23.3083%" y="341" width="0.0401%" height="15" fill="rgb(245,172,44)" fg:x="37537166104" fg:w="64560637"/><text x="23.5583%" y="351.50"></text></g><g><title>__free_one_page (55,867,537 samples, 0.03%)</title><rect x="23.3137%" y="325" width="0.0347%" height="15" fill="rgb(236,23,11)" fg:x="37545859204" fg:w="55867537"/><text x="23.5637%" y="335.50"></text></g><g><title>free_pages_and_swap_cache (157,665,472 samples, 0.10%)</title><rect x="23.2535%" y="405" width="0.0979%" height="15" fill="rgb(205,117,38)" fg:x="37449036555" fg:w="157665472"/><text x="23.5035%" y="415.50"></text></g><g><title>release_pages (157,665,472 samples, 0.10%)</title><rect x="23.2535%" y="389" width="0.0979%" height="15" fill="rgb(237,72,25)" fg:x="37449036555" fg:w="157665472"/><text x="23.5035%" y="399.50"></text></g><g><title>tlb_finish_mmu (172,908,278 samples, 0.11%)</title><rect x="23.2515%" y="421" width="0.1074%" height="15" fill="rgb(244,70,9)" fg:x="37445824641" fg:w="172908278"/><text x="23.5015%" y="431.50"></text></g><g><title>__mod_memcg_lruvec_state (20,171,107 samples, 0.01%)</title><rect x="23.5116%" y="293" width="0.0125%" height="15" fill="rgb(217,125,39)" fg:x="37864696899" fg:w="20171107"/><text x="23.7616%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (39,133,071 samples, 0.02%)</title><rect x="23.5047%" y="325" width="0.0243%" height="15" fill="rgb(235,36,10)" fg:x="37853505194" fg:w="39133071"/><text x="23.7547%" y="335.50"></text></g><g><title>__mod_lruvec_state (33,822,428 samples, 0.02%)</title><rect x="23.5080%" y="309" width="0.0210%" height="15" fill="rgb(251,123,47)" fg:x="37858815837" fg:w="33822428"/><text x="23.7580%" y="319.50"></text></g><g><title>page_remove_rmap (84,866,340 samples, 0.05%)</title><rect x="23.4828%" y="341" width="0.0527%" height="15" fill="rgb(221,13,13)" fg:x="37818195785" fg:w="84866340"/><text x="23.7328%" y="351.50"></text></g><g><title>__mem_cgroup_uncharge_list (20,773,366 samples, 0.01%)</title><rect x="23.5703%" y="293" width="0.0129%" height="15" fill="rgb(238,131,9)" fg:x="37959227986" fg:w="20773366"/><text x="23.8203%" y="303.50"></text></g><g><title>__mod_lruvec_state (19,923,972 samples, 0.01%)</title><rect x="23.5832%" y="293" width="0.0124%" height="15" fill="rgb(211,50,8)" fg:x="37980001352" fg:w="19923972"/><text x="23.8332%" y="303.50"></text></g><g><title>__mod_zone_page_state (16,452,770 samples, 0.01%)</title><rect x="23.5956%" y="293" width="0.0102%" height="15" fill="rgb(245,182,24)" fg:x="37999925324" fg:w="16452770"/><text x="23.8456%" y="303.50"></text></g><g><title>free_unref_page_list (128,688,017 samples, 0.08%)</title><rect x="23.6072%" y="293" width="0.0799%" height="15" fill="rgb(242,14,37)" fg:x="38018651518" fg:w="128688017"/><text x="23.8572%" y="303.50"></text></g><g><title>free_unref_page_commit.constprop.0 (114,662,378 samples, 0.07%)</title><rect x="23.6159%" y="277" width="0.0712%" height="15" fill="rgb(246,228,12)" fg:x="38032677157" fg:w="114662378"/><text x="23.8659%" y="287.50"></text></g><g><title>free_pcppages_bulk (99,555,405 samples, 0.06%)</title><rect x="23.6253%" y="261" width="0.0618%" height="15" fill="rgb(213,55,15)" fg:x="38047784130" fg:w="99555405"/><text x="23.8753%" y="271.50"></text></g><g><title>__free_one_page (52,826,930 samples, 0.03%)</title><rect x="23.6543%" y="245" width="0.0328%" height="15" fill="rgb(209,9,3)" fg:x="38094512605" fg:w="52826930"/><text x="23.9043%" y="255.50"></text></g><g><title>free_pages_and_swap_cache (260,576,746 samples, 0.16%)</title><rect x="23.5355%" y="325" width="0.1618%" height="15" fill="rgb(230,59,30)" fg:x="37903062125" fg:w="260576746"/><text x="23.7855%" y="335.50"></text></g><g><title>release_pages (253,493,001 samples, 0.16%)</title><rect x="23.5399%" y="309" width="0.1574%" height="15" fill="rgb(209,121,21)" fg:x="37910145870" fg:w="253493001"/><text x="23.7899%" y="319.50"></text></g><g><title>tlb_flush_mmu (270,409,349 samples, 0.17%)</title><rect x="23.5355%" y="341" width="0.1679%" height="15" fill="rgb(220,109,13)" fg:x="37903062125" fg:w="270409349"/><text x="23.7855%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29,929,092,339 samples, 18.58%)</title><rect x="5.1230%" y="661" width="18.5841%" height="15" fill="rgb(232,18,1)" fg:x="8250418042" fg:w="29929092339"/><text x="5.3730%" y="671.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc:..</text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched_ref (29,929,092,339 samples, 18.58%)</title><rect x="5.1230%" y="645" width="18.5841%" height="15" fill="rgb(215,41,42)" fg:x="8250418042" fg:w="29929092339"/><text x="5.3730%" y="655.50">criterion::bencher::Bencher&lt;M..</text></g><g><title>cfree@GLIBC_2.2.5 (735,915,296 samples, 0.46%)</title><rect x="23.2502%" y="629" width="0.4570%" height="15" fill="rgb(224,123,36)" fg:x="37443595085" fg:w="735915296"/><text x="23.5002%" y="639.50"></text></g><g><title>_int_free (735,915,296 samples, 0.46%)</title><rect x="23.2502%" y="613" width="0.4570%" height="15" fill="rgb(240,125,3)" fg:x="37443595085" fg:w="735915296"/><text x="23.5002%" y="623.50"></text></g><g><title>systrim.constprop.0 (735,915,296 samples, 0.46%)</title><rect x="23.2502%" y="597" width="0.4570%" height="15" fill="rgb(205,98,50)" fg:x="37443595085" fg:w="735915296"/><text x="23.5002%" y="607.50"></text></g><g><title>__default_morecore@GLIBC_2.2.5 (735,915,296 samples, 0.46%)</title><rect x="23.2502%" y="581" width="0.4570%" height="15" fill="rgb(205,185,37)" fg:x="37443595085" fg:w="735915296"/><text x="23.5002%" y="591.50"></text></g><g><title>__sbrk (733,685,740 samples, 0.46%)</title><rect x="23.2515%" y="565" width="0.4556%" height="15" fill="rgb(238,207,15)" fg:x="37445824641" fg:w="733685740"/><text x="23.5015%" y="575.50"></text></g><g><title>__brk (733,685,740 samples, 0.46%)</title><rect x="23.2515%" y="549" width="0.4556%" height="15" fill="rgb(213,199,42)" fg:x="37445824641" fg:w="733685740"/><text x="23.5015%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (733,685,740 samples, 0.46%)</title><rect x="23.2515%" y="533" width="0.4556%" height="15" fill="rgb(235,201,11)" fg:x="37445824641" fg:w="733685740"/><text x="23.5015%" y="543.50"></text></g><g><title>do_syscall_64 (733,685,740 samples, 0.46%)</title><rect x="23.2515%" y="517" width="0.4556%" height="15" fill="rgb(207,46,11)" fg:x="37445824641" fg:w="733685740"/><text x="23.5015%" y="527.50"></text></g><g><title>x64_sys_call (733,685,740 samples, 0.46%)</title><rect x="23.2515%" y="501" width="0.4556%" height="15" fill="rgb(241,35,35)" fg:x="37445824641" fg:w="733685740"/><text x="23.5015%" y="511.50"></text></g><g><title>__x64_sys_brk (733,685,740 samples, 0.46%)</title><rect x="23.2515%" y="485" width="0.4556%" height="15" fill="rgb(243,32,47)" fg:x="37445824641" fg:w="733685740"/><text x="23.5015%" y="495.50"></text></g><g><title>__do_sys_brk (733,685,740 samples, 0.46%)</title><rect x="23.2515%" y="469" width="0.4556%" height="15" fill="rgb(247,202,23)" fg:x="37445824641" fg:w="733685740"/><text x="23.5015%" y="479.50"></text></g><g><title>__do_munmap (733,685,740 samples, 0.46%)</title><rect x="23.2515%" y="453" width="0.4556%" height="15" fill="rgb(219,102,11)" fg:x="37445824641" fg:w="733685740"/><text x="23.5015%" y="463.50"></text></g><g><title>unmap_region (733,685,740 samples, 0.46%)</title><rect x="23.2515%" y="437" width="0.4556%" height="15" fill="rgb(243,110,44)" fg:x="37445824641" fg:w="733685740"/><text x="23.5015%" y="447.50"></text></g><g><title>unmap_vmas (560,777,462 samples, 0.35%)</title><rect x="23.3589%" y="421" width="0.3482%" height="15" fill="rgb(222,74,54)" fg:x="37618732919" fg:w="560777462"/><text x="23.6089%" y="431.50"></text></g><g><title>unmap_single_vma (560,777,462 samples, 0.35%)</title><rect x="23.3589%" y="405" width="0.3482%" height="15" fill="rgb(216,99,12)" fg:x="37618732919" fg:w="560777462"/><text x="23.6089%" y="415.50"></text></g><g><title>unmap_page_range (560,777,462 samples, 0.35%)</title><rect x="23.3589%" y="389" width="0.3482%" height="15" fill="rgb(226,22,26)" fg:x="37618732919" fg:w="560777462"/><text x="23.6089%" y="399.50"></text></g><g><title>zap_pmd_range.isra.0 (560,777,462 samples, 0.35%)</title><rect x="23.3589%" y="373" width="0.3482%" height="15" fill="rgb(217,163,10)" fg:x="37618732919" fg:w="560777462"/><text x="23.6089%" y="383.50"></text></g><g><title>zap_pte_range (558,849,031 samples, 0.35%)</title><rect x="23.3601%" y="357" width="0.3470%" height="15" fill="rgb(213,25,53)" fg:x="37620661350" fg:w="558849031"/><text x="23.6101%" y="367.50"></text></g><g><title>__irqentry_text_end (23,098,673 samples, 0.01%)</title><rect x="23.7897%" y="613" width="0.0143%" height="15" fill="rgb(252,105,26)" fg:x="38312473453" fg:w="23098673"/><text x="24.0397%" y="623.50"></text></g><g><title>get_page_from_freelist (19,565,539 samples, 0.01%)</title><rect x="23.8171%" y="469" width="0.0121%" height="15" fill="rgb(220,39,43)" fg:x="38356560991" fg:w="19565539"/><text x="24.0671%" y="479.50"></text></g><g><title>alloc_pages_vma (23,576,941 samples, 0.01%)</title><rect x="23.8171%" y="501" width="0.0146%" height="15" fill="rgb(229,68,48)" fg:x="38356560991" fg:w="23576941"/><text x="24.0671%" y="511.50"></text></g><g><title>__alloc_pages (23,576,941 samples, 0.01%)</title><rect x="23.8171%" y="485" width="0.0146%" height="15" fill="rgb(252,8,32)" fg:x="38356560991" fg:w="23576941"/><text x="24.0671%" y="495.50"></text></g><g><title>asm_exc_page_fault (67,510,704 samples, 0.04%)</title><rect x="23.8040%" y="613" width="0.0419%" height="15" fill="rgb(223,20,43)" fg:x="38335572126" fg:w="67510704"/><text x="24.0540%" y="623.50"></text></g><g><title>exc_page_fault (67,510,704 samples, 0.04%)</title><rect x="23.8040%" y="597" width="0.0419%" height="15" fill="rgb(229,81,49)" fg:x="38335572126" fg:w="67510704"/><text x="24.0540%" y="607.50"></text></g><g><title>do_user_addr_fault (67,510,704 samples, 0.04%)</title><rect x="23.8040%" y="581" width="0.0419%" height="15" fill="rgb(236,28,36)" fg:x="38335572126" fg:w="67510704"/><text x="24.0540%" y="591.50"></text></g><g><title>handle_mm_fault (67,510,704 samples, 0.04%)</title><rect x="23.8040%" y="565" width="0.0419%" height="15" fill="rgb(249,185,26)" fg:x="38335572126" fg:w="67510704"/><text x="24.0540%" y="575.50"></text></g><g><title>__handle_mm_fault (53,050,807 samples, 0.03%)</title><rect x="23.8130%" y="549" width="0.0329%" height="15" fill="rgb(249,174,33)" fg:x="38350032023" fg:w="53050807"/><text x="24.0630%" y="559.50"></text></g><g><title>handle_pte_fault (51,587,950 samples, 0.03%)</title><rect x="23.8139%" y="533" width="0.0320%" height="15" fill="rgb(233,201,37)" fg:x="38351494880" fg:w="51587950"/><text x="24.0639%" y="543.50"></text></g><g><title>do_anonymous_page (51,587,950 samples, 0.03%)</title><rect x="23.8139%" y="517" width="0.0320%" height="15" fill="rgb(221,78,26)" fg:x="38351494880" fg:w="51587950"/><text x="24.0639%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (310,496,951 samples, 0.19%)</title><rect x="23.7071%" y="629" width="0.1928%" height="15" fill="rgb(250,127,30)" fg:x="38179510381" fg:w="310496951"/><text x="23.9571%" y="639.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (76,035,142 samples, 0.05%)</title><rect x="23.8527%" y="613" width="0.0472%" height="15" fill="rgb(230,49,44)" fg:x="38413972190" fg:w="76035142"/><text x="24.1027%" y="623.50"></text></g><g><title>&lt;mergesort_showcase::single_array_sort::SingleArray as mergesort_showcase::Sort&gt;::sort (1,280,177,864 samples, 0.79%)</title><rect x="23.8999%" y="629" width="0.7949%" height="15" fill="rgb(229,67,23)" fg:x="38490007332" fg:w="1280177864"/><text x="24.1499%" y="639.50"></text></g><g><title>mergesort_showcase::single_array_sort::_merge_sort_parallel (1,280,177,864 samples, 0.79%)</title><rect x="23.8999%" y="613" width="0.7949%" height="15" fill="rgb(249,83,47)" fg:x="38490007332" fg:w="1280177864"/><text x="24.1499%" y="623.50"></text></g><g><title>std::thread::scoped::scope (1,011,892,989 samples, 0.63%)</title><rect x="24.0665%" y="597" width="0.6283%" height="15" fill="rgb(215,43,3)" fg:x="38758292207" fg:w="1011892989"/><text x="24.3165%" y="607.50"></text></g><g><title>mergesort_showcase::single_array_sort::_merge_sort_parallel (1,011,892,989 samples, 0.63%)</title><rect x="24.0665%" y="581" width="0.6283%" height="15" fill="rgb(238,154,13)" fg:x="38758292207" fg:w="1011892989"/><text x="24.3165%" y="591.50"></text></g><g><title>std::thread::scoped::scope (878,005,398 samples, 0.55%)</title><rect x="24.1496%" y="565" width="0.5452%" height="15" fill="rgb(219,56,2)" fg:x="38892179798" fg:w="878005398"/><text x="24.3996%" y="575.50"></text></g><g><title>mergesort_showcase::single_array_sort::_merge_sort_parallel (878,005,398 samples, 0.55%)</title><rect x="24.1496%" y="549" width="0.5452%" height="15" fill="rgb(233,0,4)" fg:x="38892179798" fg:w="878005398"/><text x="24.3996%" y="559.50"></text></g><g><title>std::thread::scoped::scope (809,940,788 samples, 0.50%)</title><rect x="24.1919%" y="533" width="0.5029%" height="15" fill="rgb(235,30,7)" fg:x="38960244408" fg:w="809940788"/><text x="24.4419%" y="543.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (809,940,788 samples, 0.50%)</title><rect x="24.1919%" y="517" width="0.5029%" height="15" fill="rgb(250,79,13)" fg:x="38960244408" fg:w="809940788"/><text x="24.4419%" y="527.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (778,129,423 samples, 0.48%)</title><rect x="24.2117%" y="501" width="0.4832%" height="15" fill="rgb(211,146,34)" fg:x="38992055773" fg:w="778129423"/><text x="24.4617%" y="511.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (746,480,449 samples, 0.46%)</title><rect x="24.2313%" y="485" width="0.4635%" height="15" fill="rgb(228,22,38)" fg:x="39023704747" fg:w="746480449"/><text x="24.4813%" y="495.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (713,347,663 samples, 0.44%)</title><rect x="24.2519%" y="469" width="0.4429%" height="15" fill="rgb(235,168,5)" fg:x="39056837533" fg:w="713347663"/><text x="24.5019%" y="479.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (684,506,613 samples, 0.43%)</title><rect x="24.2698%" y="453" width="0.4250%" height="15" fill="rgb(221,155,16)" fg:x="39085678583" fg:w="684506613"/><text x="24.5198%" y="463.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (635,281,826 samples, 0.39%)</title><rect x="24.3004%" y="437" width="0.3945%" height="15" fill="rgb(215,215,53)" fg:x="39134903370" fg:w="635281826"/><text x="24.5504%" y="447.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (600,063,646 samples, 0.37%)</title><rect x="24.3222%" y="421" width="0.3726%" height="15" fill="rgb(223,4,10)" fg:x="39170121550" fg:w="600063646"/><text x="24.5722%" y="431.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (571,971,045 samples, 0.36%)</title><rect x="24.3397%" y="405" width="0.3552%" height="15" fill="rgb(234,103,6)" fg:x="39198214151" fg:w="571971045"/><text x="24.5897%" y="415.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (531,305,220 samples, 0.33%)</title><rect x="24.3649%" y="389" width="0.3299%" height="15" fill="rgb(227,97,0)" fg:x="39238879976" fg:w="531305220"/><text x="24.6149%" y="399.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (510,067,410 samples, 0.32%)</title><rect x="24.3781%" y="373" width="0.3167%" height="15" fill="rgb(234,150,53)" fg:x="39260117786" fg:w="510067410"/><text x="24.6281%" y="383.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (483,435,923 samples, 0.30%)</title><rect x="24.3946%" y="357" width="0.3002%" height="15" fill="rgb(228,201,54)" fg:x="39286749273" fg:w="483435923"/><text x="24.6446%" y="367.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (455,768,146 samples, 0.28%)</title><rect x="24.4118%" y="341" width="0.2830%" height="15" fill="rgb(222,22,37)" fg:x="39314417050" fg:w="455768146"/><text x="24.6618%" y="351.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (430,954,774 samples, 0.27%)</title><rect x="24.4272%" y="325" width="0.2676%" height="15" fill="rgb(237,53,32)" fg:x="39339230422" fg:w="430954774"/><text x="24.6772%" y="335.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (383,948,885 samples, 0.24%)</title><rect x="24.4564%" y="309" width="0.2384%" height="15" fill="rgb(233,25,53)" fg:x="39386236311" fg:w="383948885"/><text x="24.7064%" y="319.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (353,918,150 samples, 0.22%)</title><rect x="24.4751%" y="293" width="0.2198%" height="15" fill="rgb(210,40,34)" fg:x="39416267046" fg:w="353918150"/><text x="24.7251%" y="303.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (318,901,421 samples, 0.20%)</title><rect x="24.4968%" y="277" width="0.1980%" height="15" fill="rgb(241,220,44)" fg:x="39451283775" fg:w="318901421"/><text x="24.7468%" y="287.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (279,980,373 samples, 0.17%)</title><rect x="24.5210%" y="261" width="0.1739%" height="15" fill="rgb(235,28,35)" fg:x="39490204823" fg:w="279980373"/><text x="24.7710%" y="271.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (229,920,783 samples, 0.14%)</title><rect x="24.5521%" y="245" width="0.1428%" height="15" fill="rgb(210,56,17)" fg:x="39540264413" fg:w="229920783"/><text x="24.8021%" y="255.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (177,860,453 samples, 0.11%)</title><rect x="24.5844%" y="229" width="0.1104%" height="15" fill="rgb(224,130,29)" fg:x="39592324743" fg:w="177860453"/><text x="24.8344%" y="239.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (110,109,375 samples, 0.07%)</title><rect x="24.6265%" y="213" width="0.0684%" height="15" fill="rgb(235,212,8)" fg:x="39660075821" fg:w="110109375"/><text x="24.8765%" y="223.50"></text></g><g><title>__libc_start_main@@GLIBC_2.34 (31,561,568,936 samples, 19.60%)</title><rect x="5.1230%" y="821" width="19.5978%" height="15" fill="rgb(223,33,50)" fg:x="8250418042" fg:w="31561568936"/><text x="5.3730%" y="831.50">__libc_start_main@@GLIBC_2.34</text></g><g><title>__libc_start_call_main (31,561,568,936 samples, 19.60%)</title><rect x="5.1230%" y="805" width="19.5978%" height="15" fill="rgb(219,149,13)" fg:x="8250418042" fg:w="31561568936"/><text x="5.3730%" y="815.50">__libc_start_call_main</text></g><g><title>main (31,561,568,936 samples, 19.60%)</title><rect x="5.1230%" y="789" width="19.5978%" height="15" fill="rgb(250,156,29)" fg:x="8250418042" fg:w="31561568936"/><text x="5.3730%" y="799.50">main</text></g><g><title>std::rt::lang_start_internal (31,561,568,936 samples, 19.60%)</title><rect x="5.1230%" y="773" width="19.5978%" height="15" fill="rgb(216,193,19)" fg:x="8250418042" fg:w="31561568936"/><text x="5.3730%" y="783.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::_{{closure}} (31,561,568,936 samples, 19.60%)</title><rect x="5.1230%" y="757" width="19.5978%" height="15" fill="rgb(216,135,14)" fg:x="8250418042" fg:w="31561568936"/><text x="5.3730%" y="767.50">std::rt::lang_start::_{{closure..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (31,561,568,936 samples, 19.60%)</title><rect x="5.1230%" y="741" width="19.5978%" height="15" fill="rgb(241,47,5)" fg:x="8250418042" fg:w="31561568936"/><text x="5.3730%" y="751.50">std::sys::backtrace::__rust_beg..</text></g><g><title>compare_sorts::main (31,561,568,936 samples, 19.60%)</title><rect x="5.1230%" y="725" width="19.5978%" height="15" fill="rgb(233,42,35)" fg:x="8250418042" fg:w="31561568936"/><text x="5.3730%" y="735.50">compare_sorts::main</text></g><g><title>compare_sorts::utils::bench_sort (31,561,568,936 samples, 19.60%)</title><rect x="5.1230%" y="709" width="19.5978%" height="15" fill="rgb(231,13,6)" fg:x="8250418042" fg:w="31561568936"/><text x="5.3730%" y="719.50">compare_sorts::utils::bench_sort</text></g><g><title>criterion::benchmark_group::BenchmarkGroup&lt;M&gt;::bench_with_input (31,561,568,936 samples, 19.60%)</title><rect x="5.1230%" y="693" width="19.5978%" height="15" fill="rgb(207,181,40)" fg:x="8250418042" fg:w="31561568936"/><text x="5.3730%" y="703.50">criterion::benchmark_group::Ben..</text></g><g><title>criterion::routine::Routine::profile (31,561,568,936 samples, 19.60%)</title><rect x="5.1230%" y="677" width="19.5978%" height="15" fill="rgb(254,173,49)" fg:x="8250418042" fg:w="31561568936"/><text x="5.3730%" y="687.50">criterion::routine::Routine::pr..</text></g><g><title>&lt;criterion::routine::Function&lt;M,F,T&gt; as criterion::routine::Routine&lt;M,T&gt;&gt;::warm_up (1,632,476,597 samples, 1.01%)</title><rect x="23.7071%" y="661" width="1.0137%" height="15" fill="rgb(221,1,38)" fg:x="38179510381" fg:w="1632476597"/><text x="23.9571%" y="671.50"></text></g><g><title>criterion::bencher::Bencher&lt;M&gt;::iter_batched_ref (1,632,476,597 samples, 1.01%)</title><rect x="23.7071%" y="645" width="1.0137%" height="15" fill="rgb(206,124,46)" fg:x="38179510381" fg:w="1632476597"/><text x="23.9571%" y="655.50"></text></g><g><title>cfree@GLIBC_2.2.5 (41,801,782 samples, 0.03%)</title><rect x="24.6948%" y="629" width="0.0260%" height="15" fill="rgb(249,21,11)" fg:x="39770185196" fg:w="41801782"/><text x="24.9448%" y="639.50"></text></g><g><title>_int_free (31,684,139 samples, 0.02%)</title><rect x="24.7011%" y="613" width="0.0197%" height="15" fill="rgb(222,201,40)" fg:x="39780302839" fg:w="31684139"/><text x="24.9511%" y="623.50"></text></g><g><title>systrim.constprop.0 (31,684,139 samples, 0.02%)</title><rect x="24.7011%" y="597" width="0.0197%" height="15" fill="rgb(235,61,29)" fg:x="39780302839" fg:w="31684139"/><text x="24.9511%" y="607.50"></text></g><g><title>__default_morecore@GLIBC_2.2.5 (31,684,139 samples, 0.02%)</title><rect x="24.7011%" y="581" width="0.0197%" height="15" fill="rgb(219,207,3)" fg:x="39780302839" fg:w="31684139"/><text x="24.9511%" y="591.50"></text></g><g><title>__sbrk (31,684,139 samples, 0.02%)</title><rect x="24.7011%" y="565" width="0.0197%" height="15" fill="rgb(222,56,46)" fg:x="39780302839" fg:w="31684139"/><text x="24.9511%" y="575.50"></text></g><g><title>__brk (31,684,139 samples, 0.02%)</title><rect x="24.7011%" y="549" width="0.0197%" height="15" fill="rgb(239,76,54)" fg:x="39780302839" fg:w="31684139"/><text x="24.9511%" y="559.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (31,684,139 samples, 0.02%)</title><rect x="24.7011%" y="533" width="0.0197%" height="15" fill="rgb(231,124,27)" fg:x="39780302839" fg:w="31684139"/><text x="24.9511%" y="543.50"></text></g><g><title>do_syscall_64 (31,684,139 samples, 0.02%)</title><rect x="24.7011%" y="517" width="0.0197%" height="15" fill="rgb(249,195,6)" fg:x="39780302839" fg:w="31684139"/><text x="24.9511%" y="527.50"></text></g><g><title>x64_sys_call (31,684,139 samples, 0.02%)</title><rect x="24.7011%" y="501" width="0.0197%" height="15" fill="rgb(237,174,47)" fg:x="39780302839" fg:w="31684139"/><text x="24.9511%" y="511.50"></text></g><g><title>__x64_sys_brk (31,684,139 samples, 0.02%)</title><rect x="24.7011%" y="485" width="0.0197%" height="15" fill="rgb(206,201,31)" fg:x="39780302839" fg:w="31684139"/><text x="24.9511%" y="495.50"></text></g><g><title>__do_sys_brk (31,684,139 samples, 0.02%)</title><rect x="24.7011%" y="469" width="0.0197%" height="15" fill="rgb(231,57,52)" fg:x="39780302839" fg:w="31684139"/><text x="24.9511%" y="479.50"></text></g><g><title>__do_munmap (31,684,139 samples, 0.02%)</title><rect x="24.7011%" y="453" width="0.0197%" height="15" fill="rgb(248,177,22)" fg:x="39780302839" fg:w="31684139"/><text x="24.9511%" y="463.50"></text></g><g><title>unmap_region (31,684,139 samples, 0.02%)</title><rect x="24.7011%" y="437" width="0.0197%" height="15" fill="rgb(215,211,37)" fg:x="39780302839" fg:w="31684139"/><text x="24.9511%" y="447.50"></text></g><g><title>unmap_vmas (23,768,836 samples, 0.01%)</title><rect x="24.7060%" y="421" width="0.0148%" height="15" fill="rgb(241,128,51)" fg:x="39788218142" fg:w="23768836"/><text x="24.9560%" y="431.50"></text></g><g><title>unmap_single_vma (23,768,836 samples, 0.01%)</title><rect x="24.7060%" y="405" width="0.0148%" height="15" fill="rgb(227,165,31)" fg:x="39788218142" fg:w="23768836"/><text x="24.9560%" y="415.50"></text></g><g><title>unmap_page_range (23,768,836 samples, 0.01%)</title><rect x="24.7060%" y="389" width="0.0148%" height="15" fill="rgb(228,167,24)" fg:x="39788218142" fg:w="23768836"/><text x="24.9560%" y="399.50"></text></g><g><title>zap_pmd_range.isra.0 (23,768,836 samples, 0.01%)</title><rect x="24.7060%" y="373" width="0.0148%" height="15" fill="rgb(228,143,12)" fg:x="39788218142" fg:w="23768836"/><text x="24.9560%" y="383.50"></text></g><g><title>zap_pte_range (23,768,836 samples, 0.01%)</title><rect x="24.7060%" y="357" width="0.0148%" height="15" fill="rgb(249,149,8)" fg:x="39788218142" fg:w="23768836"/><text x="24.9560%" y="367.50"></text></g><g><title>_start (31,574,477,454 samples, 19.61%)</title><rect x="5.1230%" y="837" width="19.6058%" height="15" fill="rgb(243,35,44)" fg:x="8250418042" fg:w="31574477454"/><text x="5.3730%" y="847.50">_start</text></g><g><title>asm_exc_page_fault (611,150,166 samples, 0.38%)</title><rect x="24.7288%" y="837" width="0.3795%" height="15" fill="rgb(246,89,9)" fg:x="39824895496" fg:w="611150166"/><text x="24.9788%" y="847.50"></text></g><g><title>allocate_fake_cpuc (16,437,456 samples, 0.01%)</title><rect x="25.1630%" y="581" width="0.0102%" height="15" fill="rgb(233,213,13)" fg:x="40524161075" fg:w="16437456"/><text x="25.4130%" y="591.50"></text></g><g><title>inherit_event.constprop.0 (57,230,212 samples, 0.04%)</title><rect x="25.1463%" y="661" width="0.0355%" height="15" fill="rgb(233,141,41)" fg:x="40497280171" fg:w="57230212"/><text x="25.3963%" y="671.50"></text></g><g><title>perf_event_alloc (41,649,261 samples, 0.03%)</title><rect x="25.1560%" y="645" width="0.0259%" height="15" fill="rgb(239,167,4)" fg:x="40512861122" fg:w="41649261"/><text x="25.4060%" y="655.50"></text></g><g><title>perf_init_event (32,237,498 samples, 0.02%)</title><rect x="25.1618%" y="629" width="0.0200%" height="15" fill="rgb(209,217,16)" fg:x="40522272885" fg:w="32237498"/><text x="25.4118%" y="639.50"></text></g><g><title>perf_try_init_event (32,237,498 samples, 0.02%)</title><rect x="25.1618%" y="613" width="0.0200%" height="15" fill="rgb(219,88,35)" fg:x="40522272885" fg:w="32237498"/><text x="25.4118%" y="623.50"></text></g><g><title>x86_pmu_event_init (32,237,498 samples, 0.02%)</title><rect x="25.1618%" y="597" width="0.0200%" height="15" fill="rgb(220,193,23)" fg:x="40522272885" fg:w="32237498"/><text x="25.4118%" y="607.50"></text></g><g><title>copy_process (89,665,683 samples, 0.06%)</title><rect x="25.1271%" y="725" width="0.0557%" height="15" fill="rgb(230,90,52)" fg:x="40466305882" fg:w="89665683"/><text x="25.3771%" y="735.50"></text></g><g><title>perf_event_init_task (63,687,944 samples, 0.04%)</title><rect x="25.1432%" y="709" width="0.0395%" height="15" fill="rgb(252,106,19)" fg:x="40492283621" fg:w="63687944"/><text x="25.3932%" y="719.50"></text></g><g><title>perf_event_init_context (63,687,944 samples, 0.04%)</title><rect x="25.1432%" y="693" width="0.0395%" height="15" fill="rgb(206,74,20)" fg:x="40492283621" fg:w="63687944"/><text x="25.3932%" y="703.50"></text></g><g><title>inherit_task_group.isra.0 (58,691,394 samples, 0.04%)</title><rect x="25.1463%" y="677" width="0.0364%" height="15" fill="rgb(230,138,44)" fg:x="40497280171" fg:w="58691394"/><text x="25.3963%" y="687.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (99,918,844 samples, 0.06%)</title><rect x="25.1245%" y="821" width="0.0620%" height="15" fill="rgb(235,182,43)" fg:x="40462204297" fg:w="99918844"/><text x="25.3745%" y="831.50"></text></g><g><title>do_syscall_64 (99,918,844 samples, 0.06%)</title><rect x="25.1245%" y="805" width="0.0620%" height="15" fill="rgb(242,16,51)" fg:x="40462204297" fg:w="99918844"/><text x="25.3745%" y="815.50"></text></g><g><title>x64_sys_call (99,918,844 samples, 0.06%)</title><rect x="25.1245%" y="789" width="0.0620%" height="15" fill="rgb(248,9,4)" fg:x="40462204297" fg:w="99918844"/><text x="25.3745%" y="799.50"></text></g><g><title>__x64_sys_clone3 (99,918,844 samples, 0.06%)</title><rect x="25.1245%" y="773" width="0.0620%" height="15" fill="rgb(210,31,22)" fg:x="40462204297" fg:w="99918844"/><text x="25.3745%" y="783.50"></text></g><g><title>__do_sys_clone3 (99,918,844 samples, 0.06%)</title><rect x="25.1245%" y="757" width="0.0620%" height="15" fill="rgb(239,54,39)" fg:x="40462204297" fg:w="99918844"/><text x="25.3745%" y="767.50"></text></g><g><title>kernel_clone (99,918,844 samples, 0.06%)</title><rect x="25.1245%" y="741" width="0.0620%" height="15" fill="rgb(230,99,41)" fg:x="40462204297" fg:w="99918844"/><text x="25.3745%" y="751.50"></text></g><g><title>__irqentry_text_end (68,354,752 samples, 0.04%)</title><rect x="39.0590%" y="373" width="0.0424%" height="15" fill="rgb(253,106,12)" fg:x="62903250404" fg:w="68354752"/><text x="39.3090%" y="383.50"></text></g><g><title>clear_page_erms (30,608,129 samples, 0.02%)</title><rect x="39.1806%" y="213" width="0.0190%" height="15" fill="rgb(213,46,41)" fg:x="63099047301" fg:w="30608129"/><text x="39.4306%" y="223.50"></text></g><g><title>__alloc_pages (56,120,369 samples, 0.03%)</title><rect x="39.1742%" y="245" width="0.0348%" height="15" fill="rgb(215,133,35)" fg:x="63088683012" fg:w="56120369"/><text x="39.4242%" y="255.50"></text></g><g><title>get_page_from_freelist (53,265,269 samples, 0.03%)</title><rect x="39.1760%" y="229" width="0.0331%" height="15" fill="rgb(213,28,5)" fg:x="63091538112" fg:w="53265269"/><text x="39.4260%" y="239.50"></text></g><g><title>alloc_pages_vma (57,586,811 samples, 0.04%)</title><rect x="39.1742%" y="261" width="0.0358%" height="15" fill="rgb(215,77,49)" fg:x="63088683012" fg:w="57586811"/><text x="39.4242%" y="271.50"></text></g><g><title>__pagevec_lru_add_fn (29,279,163 samples, 0.02%)</title><rect x="39.2155%" y="213" width="0.0182%" height="15" fill="rgb(248,100,22)" fg:x="63155190222" fg:w="29279163"/><text x="39.4655%" y="223.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (48,983,029 samples, 0.03%)</title><rect x="39.2099%" y="261" width="0.0304%" height="15" fill="rgb(208,67,9)" fg:x="63146269823" fg:w="48983029"/><text x="39.4599%" y="271.50"></text></g><g><title>lru_cache_add (45,516,040 samples, 0.03%)</title><rect x="39.2121%" y="245" width="0.0283%" height="15" fill="rgb(219,133,21)" fg:x="63149736812" fg:w="45516040"/><text x="39.4621%" y="255.50"></text></g><g><title>__pagevec_lru_add (41,079,980 samples, 0.03%)</title><rect x="39.2148%" y="229" width="0.0255%" height="15" fill="rgb(246,46,29)" fg:x="63154172872" fg:w="41079980"/><text x="39.4648%" y="239.50"></text></g><g><title>do_anonymous_page (163,912,250 samples, 0.10%)</title><rect x="39.1564%" y="277" width="0.1018%" height="15" fill="rgb(246,185,52)" fg:x="63060101451" fg:w="163912250"/><text x="39.4064%" y="287.50"></text></g><g><title>__handle_mm_fault (205,516,933 samples, 0.13%)</title><rect x="39.1323%" y="309" width="0.1276%" height="15" fill="rgb(252,136,11)" fg:x="63021304111" fg:w="205516933"/><text x="39.3823%" y="319.50"></text></g><g><title>handle_pte_fault (180,801,431 samples, 0.11%)</title><rect x="39.1477%" y="293" width="0.1123%" height="15" fill="rgb(219,138,53)" fg:x="63046019613" fg:w="180801431"/><text x="39.3977%" y="303.50"></text></g><g><title>handle_mm_fault (228,158,308 samples, 0.14%)</title><rect x="39.1228%" y="325" width="0.1417%" height="15" fill="rgb(211,51,23)" fg:x="63005877371" fg:w="228158308"/><text x="39.3728%" y="335.50"></text></g><g><title>do_user_addr_fault (257,771,948 samples, 0.16%)</title><rect x="39.1061%" y="341" width="0.1601%" height="15" fill="rgb(247,221,28)" fg:x="62979047248" fg:w="257771948"/><text x="39.3561%" y="351.50"></text></g><g><title>asm_exc_page_fault (266,549,703 samples, 0.17%)</title><rect x="39.1015%" y="373" width="0.1655%" height="15" fill="rgb(251,222,45)" fg:x="62971605156" fg:w="266549703"/><text x="39.3515%" y="383.50"></text></g><g><title>exc_page_fault (262,134,887 samples, 0.16%)</title><rect x="39.1042%" y="357" width="0.1628%" height="15" fill="rgb(217,162,53)" fg:x="62976019972" fg:w="262134887"/><text x="39.3542%" y="367.50"></text></g><g><title>error_entry (30,906,824 samples, 0.02%)</title><rect x="39.2714%" y="373" width="0.0192%" height="15" fill="rgb(229,93,14)" fg:x="63245253117" fg:w="30906824"/><text x="39.5214%" y="383.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (44,461,790 samples, 0.03%)</title><rect x="39.2906%" y="373" width="0.0276%" height="15" fill="rgb(209,67,49)" fg:x="63276159941" fg:w="44461790"/><text x="39.5406%" y="383.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (15,689,895,968 samples, 9.74%)</title><rect x="29.5897%" y="693" width="9.7425%" height="15" fill="rgb(213,87,29)" fg:x="47653153484" fg:w="15689895968"/><text x="29.8397%" y="703.50">mergesort_show..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (14,977,557,851 samples, 9.30%)</title><rect x="30.0320%" y="677" width="9.3001%" height="15" fill="rgb(205,151,52)" fg:x="48365491601" fg:w="14977557851"/><text x="30.2820%" y="687.50">mergesort_sho..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (14,288,518,486 samples, 8.87%)</title><rect x="30.4598%" y="661" width="8.8723%" height="15" fill="rgb(253,215,39)" fg:x="49054530966" fg:w="14288518486"/><text x="30.7098%" y="671.50">mergesort_sho..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (13,616,184,817 samples, 8.45%)</title><rect x="30.8773%" y="645" width="8.4548%" height="15" fill="rgb(221,220,41)" fg:x="49726864635" fg:w="13616184817"/><text x="31.1273%" y="655.50">mergesort_sh..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (12,982,436,582 samples, 8.06%)</title><rect x="31.2708%" y="629" width="8.0613%" height="15" fill="rgb(218,133,21)" fg:x="50360612870" fg:w="12982436582"/><text x="31.5208%" y="639.50">mergesort_s..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (12,373,039,127 samples, 7.68%)</title><rect x="31.6492%" y="613" width="7.6829%" height="15" fill="rgb(221,193,43)" fg:x="50970010325" fg:w="12373039127"/><text x="31.8992%" y="623.50">mergesort_s..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (11,793,978,990 samples, 7.32%)</title><rect x="32.0088%" y="597" width="7.3233%" height="15" fill="rgb(240,128,52)" fg:x="51549070462" fg:w="11793978990"/><text x="32.2588%" y="607.50">mergesort_..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (11,251,825,630 samples, 6.99%)</title><rect x="32.3454%" y="581" width="6.9867%" height="15" fill="rgb(253,114,12)" fg:x="52091223822" fg:w="11251825630"/><text x="32.5954%" y="591.50">mergesort..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (10,627,944,329 samples, 6.60%)</title><rect x="32.7328%" y="565" width="6.5993%" height="15" fill="rgb(215,223,47)" fg:x="52715105123" fg:w="10627944329"/><text x="32.9828%" y="575.50">mergesort..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (10,048,118,387 samples, 6.24%)</title><rect x="33.0929%" y="549" width="6.2393%" height="15" fill="rgb(248,225,23)" fg:x="53294931065" fg:w="10048118387"/><text x="33.3429%" y="559.50">mergesor..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (9,493,534,972 samples, 5.89%)</title><rect x="33.4372%" y="533" width="5.8949%" height="15" fill="rgb(250,108,0)" fg:x="53849514480" fg:w="9493534972"/><text x="33.6872%" y="543.50">mergeso..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (8,934,968,140 samples, 5.55%)</title><rect x="33.7841%" y="517" width="5.5481%" height="15" fill="rgb(228,208,7)" fg:x="54408081312" fg:w="8934968140"/><text x="34.0341%" y="527.50">mergeso..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (8,326,092,665 samples, 5.17%)</title><rect x="34.1621%" y="501" width="5.1700%" height="15" fill="rgb(244,45,10)" fg:x="55016956787" fg:w="8326092665"/><text x="34.4121%" y="511.50">merges..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (7,672,243,914 samples, 4.76%)</title><rect x="34.5681%" y="485" width="4.7640%" height="15" fill="rgb(207,125,25)" fg:x="55670805538" fg:w="7672243914"/><text x="34.8181%" y="495.50">merges..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (7,006,145,561 samples, 4.35%)</title><rect x="34.9817%" y="469" width="4.3504%" height="15" fill="rgb(210,195,18)" fg:x="56336903891" fg:w="7006145561"/><text x="35.2317%" y="479.50">merge..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (6,281,150,920 samples, 3.90%)</title><rect x="35.4319%" y="453" width="3.9002%" height="15" fill="rgb(249,80,12)" fg:x="57061898532" fg:w="6281150920"/><text x="35.6819%" y="463.50">merg..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (5,426,292,664 samples, 3.37%)</title><rect x="35.9627%" y="437" width="3.3694%" height="15" fill="rgb(221,65,9)" fg:x="57916756788" fg:w="5426292664"/><text x="36.2127%" y="447.50">mer..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (4,531,508,160 samples, 2.81%)</title><rect x="36.5183%" y="421" width="2.8138%" height="15" fill="rgb(235,49,36)" fg:x="58811541292" fg:w="4531508160"/><text x="36.7683%" y="431.50">me..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (3,482,757,799 samples, 2.16%)</title><rect x="37.1696%" y="405" width="2.1626%" height="15" fill="rgb(225,32,20)" fg:x="59860291653" fg:w="3482757799"/><text x="37.4196%" y="415.50">m..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (2,164,284,419 samples, 1.34%)</title><rect x="37.9882%" y="389" width="1.3439%" height="15" fill="rgb(215,141,46)" fg:x="61178765033" fg:w="2164284419"/><text x="38.2382%" y="399.50"></text></g><g><title>sync_regs (20,397,945 samples, 0.01%)</title><rect x="39.3195%" y="373" width="0.0127%" height="15" fill="rgb(250,160,47)" fg:x="63322651507" fg:w="20397945"/><text x="39.5695%" y="383.50"></text></g><g><title>mergesort_showcase::single_array_sort::_merge_sort_parallel (17,204,271,009 samples, 10.68%)</title><rect x="28.6536%" y="725" width="10.6828%" height="15" fill="rgb(216,222,40)" fg:x="46145707644" fg:w="17204271009"/><text x="28.9036%" y="735.50">mergesort_showca..</text></g><g><title>std::thread::scoped::scope (15,696,825,169 samples, 9.75%)</title><rect x="29.5897%" y="709" width="9.7468%" height="15" fill="rgb(234,217,39)" fg:x="47653153484" fg:w="15696825169"/><text x="29.8397%" y="719.50">std::thread::s..</text></g><g><title>__irqentry_text_end (120,004,429 samples, 0.07%)</title><rect x="58.3545%" y="405" width="0.0745%" height="15" fill="rgb(207,178,40)" fg:x="93977872868" fg:w="120004429"/><text x="58.6045%" y="415.50"></text></g><g><title>__mem_cgroup_charge (31,924,645 samples, 0.02%)</title><rect x="58.5071%" y="293" width="0.0198%" height="15" fill="rgb(221,136,13)" fg:x="94223721597" fg:w="31924645"/><text x="58.7571%" y="303.50"></text></g><g><title>charge_memcg (28,797,667 samples, 0.02%)</title><rect x="58.5091%" y="277" width="0.0179%" height="15" fill="rgb(249,199,10)" fg:x="94226848575" fg:w="28797667"/><text x="58.7591%" y="287.50"></text></g><g><title>try_charge_memcg (17,947,165 samples, 0.01%)</title><rect x="58.5158%" y="261" width="0.0111%" height="15" fill="rgb(249,222,13)" fg:x="94237699077" fg:w="17947165"/><text x="58.7658%" y="271.50"></text></g><g><title>clear_page_erms (72,541,689 samples, 0.05%)</title><rect x="58.5469%" y="245" width="0.0450%" height="15" fill="rgb(244,185,38)" fg:x="94287782708" fg:w="72541689"/><text x="58.7969%" y="255.50"></text></g><g><title>__alloc_pages (117,327,900 samples, 0.07%)</title><rect x="58.5373%" y="277" width="0.0729%" height="15" fill="rgb(236,202,9)" fg:x="94272352453" fg:w="117327900"/><text x="58.7873%" y="287.50"></text></g><g><title>get_page_from_freelist (108,620,840 samples, 0.07%)</title><rect x="58.5427%" y="261" width="0.0674%" height="15" fill="rgb(250,229,37)" fg:x="94281059513" fg:w="108620840"/><text x="58.7927%" y="271.50"></text></g><g><title>rmqueue (27,362,842 samples, 0.02%)</title><rect x="58.5932%" y="245" width="0.0170%" height="15" fill="rgb(206,174,23)" fg:x="94362317511" fg:w="27362842"/><text x="58.8432%" y="255.50"></text></g><g><title>alloc_pages_vma (126,075,981 samples, 0.08%)</title><rect x="58.5332%" y="293" width="0.0783%" height="15" fill="rgb(211,33,43)" fg:x="94265691408" fg:w="126075981"/><text x="58.7832%" y="303.50"></text></g><g><title>__pagevec_lru_add_fn (29,604,736 samples, 0.02%)</title><rect x="58.6211%" y="245" width="0.0184%" height="15" fill="rgb(245,58,50)" fg:x="94407209522" fg:w="29604736"/><text x="58.8711%" y="255.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (46,421,177 samples, 0.03%)</title><rect x="58.6145%" y="293" width="0.0288%" height="15" fill="rgb(244,68,36)" fg:x="94396604959" fg:w="46421177"/><text x="58.8645%" y="303.50"></text></g><g><title>lru_cache_add (43,717,676 samples, 0.03%)</title><rect x="58.6162%" y="277" width="0.0271%" height="15" fill="rgb(232,229,15)" fg:x="94399308460" fg:w="43717676"/><text x="58.8662%" y="287.50"></text></g><g><title>__pagevec_lru_add (38,950,262 samples, 0.02%)</title><rect x="58.6191%" y="261" width="0.0242%" height="15" fill="rgb(254,30,23)" fg:x="94404075874" fg:w="38950262"/><text x="58.8691%" y="271.50"></text></g><g><title>page_add_new_anon_rmap (22,652,707 samples, 0.01%)</title><rect x="58.6433%" y="293" width="0.0141%" height="15" fill="rgb(235,160,14)" fg:x="94443026136" fg:w="22652707"/><text x="58.8933%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (18,880,111 samples, 0.01%)</title><rect x="58.6456%" y="277" width="0.0117%" height="15" fill="rgb(212,155,44)" fg:x="94446798732" fg:w="18880111"/><text x="58.8956%" y="287.50"></text></g><g><title>do_anonymous_page (279,768,623 samples, 0.17%)</title><rect x="58.4937%" y="309" width="0.1737%" height="15" fill="rgb(226,2,50)" fg:x="94202120595" fg:w="279768623"/><text x="58.7437%" y="319.50"></text></g><g><title>handle_pte_fault (294,268,034 samples, 0.18%)</title><rect x="58.4861%" y="325" width="0.1827%" height="15" fill="rgb(234,177,6)" fg:x="94189871833" fg:w="294268034"/><text x="58.7361%" y="335.50"></text></g><g><title>__handle_mm_fault (327,395,511 samples, 0.20%)</title><rect x="58.4692%" y="341" width="0.2033%" height="15" fill="rgb(217,24,9)" fg:x="94162592059" fg:w="327395511"/><text x="58.7192%" y="351.50"></text></g><g><title>handle_mm_fault (357,462,537 samples, 0.22%)</title><rect x="58.4548%" y="357" width="0.2220%" height="15" fill="rgb(220,13,46)" fg:x="94139461118" fg:w="357462537"/><text x="58.7048%" y="367.50"></text></g><g><title>do_user_addr_fault (391,414,775 samples, 0.24%)</title><rect x="58.4374%" y="373" width="0.2430%" height="15" fill="rgb(239,221,27)" fg:x="94111492390" fg:w="391414775"/><text x="58.6874%" y="383.50"></text></g><g><title>asm_exc_page_fault (413,468,265 samples, 0.26%)</title><rect x="58.4307%" y="405" width="0.2567%" height="15" fill="rgb(222,198,25)" fg:x="94100651704" fg:w="413468265"/><text x="58.6807%" y="415.50"></text></g><g><title>exc_page_fault (402,627,579 samples, 0.25%)</title><rect x="58.4374%" y="389" width="0.2500%" height="15" fill="rgb(211,99,13)" fg:x="94111492390" fg:w="402627579"/><text x="58.6874%" y="399.50"></text></g><g><title>error_entry (45,058,910 samples, 0.03%)</title><rect x="58.6940%" y="405" width="0.0280%" height="15" fill="rgb(232,111,31)" fg:x="94524677788" fg:w="45058910"/><text x="58.9440%" y="415.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (162,874,972 samples, 0.10%)</title><rect x="58.7237%" y="405" width="0.1011%" height="15" fill="rgb(245,82,37)" fg:x="94572592214" fg:w="162874972"/><text x="58.9737%" y="415.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (22,383,192,326 samples, 13.90%)</title><rect x="44.9604%" y="613" width="13.8986%" height="15" fill="rgb(227,149,46)" fg:x="72407117637" fg:w="22383192326"/><text x="45.2104%" y="623.50">mergesort_showcase::s..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (21,157,306,096 samples, 13.14%)</title><rect x="45.7216%" y="597" width="13.1374%" height="15" fill="rgb(218,36,50)" fg:x="73633003867" fg:w="21157306096"/><text x="45.9716%" y="607.50">mergesort_showcase::..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (19,942,160,282 samples, 12.38%)</title><rect x="46.4761%" y="581" width="12.3829%" height="15" fill="rgb(226,80,48)" fg:x="74848149681" fg:w="19942160282"/><text x="46.7261%" y="591.50">mergesort_showcase..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (18,701,773,710 samples, 11.61%)</title><rect x="47.2463%" y="565" width="11.6126%" height="15" fill="rgb(238,224,15)" fg:x="76088536253" fg:w="18701773710"/><text x="47.4963%" y="575.50">mergesort_showcas..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (17,492,747,788 samples, 10.86%)</title><rect x="47.9970%" y="549" width="10.8619%" height="15" fill="rgb(241,136,10)" fg:x="77297562175" fg:w="17492747788"/><text x="48.2470%" y="559.50">mergesort_showca..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (16,227,987,539 samples, 10.08%)</title><rect x="48.7824%" y="533" width="10.0766%" height="15" fill="rgb(208,32,45)" fg:x="78562322424" fg:w="16227987539"/><text x="49.0324%" y="543.50">mergesort_showc..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (14,933,060,559 samples, 9.27%)</title><rect x="49.5864%" y="517" width="9.2725%" height="15" fill="rgb(207,135,9)" fg:x="79857249404" fg:w="14933060559"/><text x="49.8364%" y="527.50">mergesort_sho..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (13,679,184,870 samples, 8.49%)</title><rect x="50.3650%" y="501" width="8.4939%" height="15" fill="rgb(206,86,44)" fg:x="81111125093" fg:w="13679184870"/><text x="50.6150%" y="511.50">mergesort_sh..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (12,346,300,245 samples, 7.67%)</title><rect x="51.1926%" y="485" width="7.6663%" height="15" fill="rgb(245,177,15)" fg:x="82444009718" fg:w="12346300245"/><text x="51.4426%" y="495.50">mergesort_..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (10,793,190,079 samples, 6.70%)</title><rect x="52.1570%" y="469" width="6.7019%" height="15" fill="rgb(206,64,50)" fg:x="83997119884" fg:w="10793190079"/><text x="52.4070%" y="479.50">mergesort..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (8,988,096,641 samples, 5.58%)</title><rect x="53.2779%" y="453" width="5.5811%" height="15" fill="rgb(234,36,40)" fg:x="85802213322" fg:w="8988096641"/><text x="53.5279%" y="463.50">mergeso..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (6,987,805,282 samples, 4.34%)</title><rect x="54.5199%" y="437" width="4.3390%" height="15" fill="rgb(213,64,8)" fg:x="87802504681" fg:w="6987805282"/><text x="54.7699%" y="447.50">merge..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (4,351,985,011 samples, 2.70%)</title><rect x="56.1566%" y="421" width="2.7023%" height="15" fill="rgb(210,75,36)" fg:x="90438324952" fg:w="4351985011"/><text x="56.4066%" y="431.50">me..</text></g><g><title>sync_regs (44,312,920 samples, 0.03%)</title><rect x="58.8314%" y="405" width="0.0275%" height="15" fill="rgb(229,88,21)" fg:x="94745997043" fg:w="44312920"/><text x="59.0814%" y="415.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (31,441,337,304 samples, 19.52%)</title><rect x="39.3364%" y="725" width="19.5231%" height="15" fill="rgb(252,204,47)" fg:x="63349978653" fg:w="31441337304"/><text x="39.5864%" y="735.50">mergesort_showcase::single_arra..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (30,025,664,719 samples, 18.64%)</title><rect x="40.2155%" y="709" width="18.6441%" height="15" fill="rgb(208,77,27)" fg:x="64765651238" fg:w="30025664719"/><text x="40.4655%" y="719.50">mergesort_showcase::single_ar..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (28,672,290,477 samples, 17.80%)</title><rect x="41.0558%" y="693" width="17.8037%" height="15" fill="rgb(221,76,26)" fg:x="66119025480" fg:w="28672290477"/><text x="41.3058%" y="703.50">mergesort_showcase::single_a..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (27,347,587,269 samples, 16.98%)</title><rect x="41.8784%" y="677" width="16.9812%" height="15" fill="rgb(225,139,18)" fg:x="67443728688" fg:w="27347587269"/><text x="42.1284%" y="687.50">mergesort_showcase::single..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (26,033,332,121 samples, 16.17%)</title><rect x="42.6945%" y="661" width="16.1651%" height="15" fill="rgb(230,137,11)" fg:x="68757983836" fg:w="26033332121"/><text x="42.9445%" y="671.50">mergesort_showcase::singl..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (24,807,808,063 samples, 15.40%)</title><rect x="43.4554%" y="645" width="15.4041%" height="15" fill="rgb(212,28,1)" fg:x="69983507894" fg:w="24807808063"/><text x="43.7054%" y="655.50">mergesort_showcase::sing..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (23,638,666,567 samples, 14.68%)</title><rect x="44.1814%" y="629" width="14.6782%" height="15" fill="rgb(248,164,17)" fg:x="71152649390" fg:w="23638666567"/><text x="44.4314%" y="639.50">mergesort_showcase::si..</text></g><g><title>mergesort_showcase::single_array_sort::_merge_sort_parallel (54,177,719,458 samples, 33.64%)</title><rect x="25.2233%" y="757" width="33.6410%" height="15" fill="rgb(222,171,42)" fg:x="40621341315" fg:w="54177719458"/><text x="25.4733%" y="767.50">mergesort_showcase::single_array_sort::_merge_sort_para..</text></g><g><title>std::thread::scoped::scope (48,653,587,574 samples, 30.21%)</title><rect x="28.6535%" y="741" width="30.2109%" height="15" fill="rgb(243,84,45)" fg:x="46145473199" fg:w="48653587574"/><text x="28.9035%" y="751.50">std::thread::scoped::scope</text></g><g><title>__irqentry_text_end (266,867,979 samples, 0.17%)</title><rect x="96.9664%" y="437" width="0.1657%" height="15" fill="rgb(252,49,23)" fg:x="156161078812" fg:w="266867979"/><text x="97.2164%" y="447.50"></text></g><g><title>down_read_trylock (39,604,985 samples, 0.02%)</title><rect x="97.1525%" y="389" width="0.0246%" height="15" fill="rgb(215,19,7)" fg:x="156460775398" fg:w="39604985"/><text x="97.4025%" y="399.50"></text></g><g><title>__count_memcg_events (34,016,798 samples, 0.02%)</title><rect x="97.1934%" y="373" width="0.0211%" height="15" fill="rgb(238,81,41)" fg:x="156526591959" fg:w="34016798"/><text x="97.4434%" y="383.50"></text></g><g><title>_raw_spin_lock (24,910,676 samples, 0.02%)</title><rect x="97.2740%" y="341" width="0.0155%" height="15" fill="rgb(210,199,37)" fg:x="156656533453" fg:w="24910676"/><text x="97.5240%" y="351.50"></text></g><g><title>__cgroup_throttle_swaprate (16,204,898 samples, 0.01%)</title><rect x="97.3004%" y="325" width="0.0101%" height="15" fill="rgb(244,192,49)" fg:x="156698946457" fg:w="16204898"/><text x="97.5504%" y="335.50"></text></g><g><title>charge_memcg (57,956,700 samples, 0.04%)</title><rect x="97.3129%" y="309" width="0.0360%" height="15" fill="rgb(226,211,11)" fg:x="156719111890" fg:w="57956700"/><text x="97.5629%" y="319.50"></text></g><g><title>try_charge_memcg (35,779,986 samples, 0.02%)</title><rect x="97.3267%" y="293" width="0.0222%" height="15" fill="rgb(236,162,54)" fg:x="156741288604" fg:w="35779986"/><text x="97.5767%" y="303.50"></text></g><g><title>__mem_cgroup_charge (80,522,712 samples, 0.05%)</title><rect x="97.3111%" y="325" width="0.0500%" height="15" fill="rgb(220,229,9)" fg:x="156716182136" fg:w="80522712"/><text x="97.5611%" y="335.50"></text></g><g><title>clear_page_erms (135,884,706 samples, 0.08%)</title><rect x="97.4137%" y="277" width="0.0844%" height="15" fill="rgb(250,87,22)" fg:x="156881455872" fg:w="135884706"/><text x="97.6637%" y="287.50"></text></g><g><title>get_page_from_freelist (219,965,868 samples, 0.14%)</title><rect x="97.3973%" y="293" width="0.1366%" height="15" fill="rgb(239,43,17)" fg:x="156854968228" fg:w="219965868"/><text x="97.6473%" y="303.50"></text></g><g><title>rmqueue (57,593,518 samples, 0.04%)</title><rect x="97.4981%" y="277" width="0.0358%" height="15" fill="rgb(231,177,25)" fg:x="157017340578" fg:w="57593518"/><text x="97.7481%" y="287.50"></text></g><g><title>rmqueue_bulk (29,010,143 samples, 0.02%)</title><rect x="97.5158%" y="261" width="0.0180%" height="15" fill="rgb(219,179,1)" fg:x="157045923953" fg:w="29010143"/><text x="97.7658%" y="271.50"></text></g><g><title>__alloc_pages (253,914,023 samples, 0.16%)</title><rect x="97.3779%" y="309" width="0.1577%" height="15" fill="rgb(238,219,53)" fg:x="156823778051" fg:w="253914023"/><text x="97.6279%" y="319.50"></text></g><g><title>alloc_pages_vma (277,586,461 samples, 0.17%)</title><rect x="97.3664%" y="325" width="0.1724%" height="15" fill="rgb(232,167,36)" fg:x="156805220076" fg:w="277586461"/><text x="97.6164%" y="335.50"></text></g><g><title>__pagevec_lru_add_fn (65,496,231 samples, 0.04%)</title><rect x="97.5617%" y="277" width="0.0407%" height="15" fill="rgb(244,19,51)" fg:x="157119757103" fg:w="65496231"/><text x="97.8117%" y="287.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (109,232,546 samples, 0.07%)</title><rect x="97.5433%" y="325" width="0.0678%" height="15" fill="rgb(224,6,22)" fg:x="157090099426" fg:w="109232546"/><text x="97.7933%" y="335.50"></text></g><g><title>lru_cache_add (108,118,889 samples, 0.07%)</title><rect x="97.5440%" y="309" width="0.0671%" height="15" fill="rgb(224,145,5)" fg:x="157091213083" fg:w="108118889"/><text x="97.7940%" y="319.50"></text></g><g><title>__pagevec_lru_add (98,751,251 samples, 0.06%)</title><rect x="97.5498%" y="293" width="0.0613%" height="15" fill="rgb(234,130,49)" fg:x="157100580721" fg:w="98751251"/><text x="97.7998%" y="303.50"></text></g><g><title>__mod_lruvec_state (26,855,419 samples, 0.02%)</title><rect x="97.6184%" y="293" width="0.0167%" height="15" fill="rgb(254,6,2)" fg:x="157211060828" fg:w="26855419"/><text x="97.8684%" y="303.50"></text></g><g><title>__mod_lruvec_page_state (38,852,488 samples, 0.02%)</title><rect x="97.6127%" y="309" width="0.0241%" height="15" fill="rgb(208,96,46)" fg:x="157201934564" fg:w="38852488"/><text x="97.8627%" y="319.50"></text></g><g><title>page_add_new_anon_rmap (44,495,715 samples, 0.03%)</title><rect x="97.6111%" y="325" width="0.0276%" height="15" fill="rgb(239,3,39)" fg:x="157199331972" fg:w="44495715"/><text x="97.8611%" y="335.50"></text></g><g><title>do_anonymous_page (566,449,648 samples, 0.35%)</title><rect x="97.2904%" y="341" width="0.3517%" height="15" fill="rgb(233,210,1)" fg:x="156682786516" fg:w="566449648"/><text x="97.5404%" y="351.50"></text></g><g><title>handle_pte_fault (637,290,281 samples, 0.40%)</title><rect x="97.2512%" y="357" width="0.3957%" height="15" fill="rgb(244,137,37)" fg:x="156619669297" fg:w="637290281"/><text x="97.5012%" y="367.50"></text></g><g><title>__handle_mm_fault (701,002,342 samples, 0.44%)</title><rect x="97.2145%" y="373" width="0.4353%" height="15" fill="rgb(240,136,2)" fg:x="156560608757" fg:w="701002342"/><text x="97.4645%" y="383.50"></text></g><g><title>handle_mm_fault (766,052,700 samples, 0.48%)</title><rect x="97.1839%" y="389" width="0.4757%" height="15" fill="rgb(239,18,37)" fg:x="156511396968" fg:w="766052700"/><text x="97.4339%" y="399.50"></text></g><g><title>do_user_addr_fault (851,498,287 samples, 0.53%)</title><rect x="97.1401%" y="405" width="0.5287%" height="15" fill="rgb(218,185,22)" fg:x="156440846811" fg:w="851498287"/><text x="97.3901%" y="415.50"></text></g><g><title>irqentry_exit (22,413,681 samples, 0.01%)</title><rect x="97.6722%" y="405" width="0.0139%" height="15" fill="rgb(225,218,4)" fg:x="157297789085" fg:w="22413681"/><text x="97.9222%" y="415.50"></text></g><g><title>irqentry_exit_to_user_mode (18,357,682 samples, 0.01%)</title><rect x="97.6747%" y="389" width="0.0114%" height="15" fill="rgb(230,182,32)" fg:x="157301845084" fg:w="18357682"/><text x="97.9247%" y="399.50"></text></g><g><title>asm_exc_page_fault (910,603,337 samples, 0.57%)</title><rect x="97.1321%" y="437" width="0.5654%" height="15" fill="rgb(242,56,43)" fg:x="156427946791" fg:w="910603337"/><text x="97.3821%" y="447.50"></text></g><g><title>exc_page_fault (901,107,618 samples, 0.56%)</title><rect x="97.1380%" y="421" width="0.5595%" height="15" fill="rgb(233,99,24)" fg:x="156437442510" fg:w="901107618"/><text x="97.3880%" y="431.50"></text></g><g><title>up_read (18,347,362 samples, 0.01%)</title><rect x="97.6861%" y="405" width="0.0114%" height="15" fill="rgb(234,209,42)" fg:x="157320202766" fg:w="18347362"/><text x="97.9361%" y="415.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (21,359,292 samples, 0.01%)</title><rect x="97.6975%" y="437" width="0.0133%" height="15" fill="rgb(227,7,12)" fg:x="157338550128" fg:w="21359292"/><text x="97.9475%" y="447.50"></text></g><g><title>sysvec_apic_timer_interrupt (18,994,561 samples, 0.01%)</title><rect x="97.6990%" y="421" width="0.0118%" height="15" fill="rgb(245,203,43)" fg:x="157340914859" fg:w="18994561"/><text x="97.9490%" y="431.50"></text></g><g><title>error_entry (87,028,953 samples, 0.05%)</title><rect x="97.7152%" y="437" width="0.0540%" height="15" fill="rgb(238,205,33)" fg:x="157366958815" fg:w="87028953"/><text x="97.9652%" y="447.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (236,017,712 samples, 0.15%)</title><rect x="97.7713%" y="437" width="0.1466%" height="15" fill="rgb(231,56,7)" fg:x="157457261611" fg:w="236017712"/><text x="98.0213%" y="447.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (25,002,220,122 samples, 15.52%)</title><rect x="82.4359%" y="517" width="15.5248%" height="15" fill="rgb(244,186,29)" fg:x="132760232893" fg:w="25002220122"/><text x="82.6859%" y="527.50">mergesort_showcase::sing..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (21,904,970,153 samples, 13.60%)</title><rect x="84.3591%" y="501" width="13.6016%" height="15" fill="rgb(234,111,31)" fg:x="135857482862" fg:w="21904970153"/><text x="84.6091%" y="511.50">mergesort_showcase::s..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (18,283,735,407 samples, 11.35%)</title><rect x="86.6077%" y="485" width="11.3531%" height="15" fill="rgb(241,149,10)" fg:x="139478717608" fg:w="18283735407"/><text x="86.8577%" y="495.50">mergesort_showcas..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (13,982,145,372 samples, 8.68%)</title><rect x="89.2787%" y="469" width="8.6821%" height="15" fill="rgb(249,206,44)" fg:x="143780307643" fg:w="13982145372"/><text x="89.5287%" y="479.50">mergesort_sh..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (8,461,186,727 samples, 5.25%)</title><rect x="92.7069%" y="453" width="5.2539%" height="15" fill="rgb(251,153,30)" fg:x="149301266288" fg:w="8461186727"/><text x="92.9569%" y="463.50">merges..</text></g><g><title>sync_regs (69,173,692 samples, 0.04%)</title><rect x="97.9178%" y="437" width="0.0430%" height="15" fill="rgb(239,152,38)" fg:x="157693279323" fg:w="69173692"/><text x="98.1678%" y="447.50"></text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (42,507,722,684 samples, 26.39%)</title><rect x="71.5668%" y="629" width="26.3947%" height="15" fill="rgb(249,139,47)" fg:x="115255945564" fg:w="42507722684"/><text x="71.8168%" y="639.50">mergesort_showcase::single_array_sort::mer..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (40,115,181,361 samples, 24.91%)</title><rect x="73.0525%" y="613" width="24.9091%" height="15" fill="rgb(244,64,35)" fg:x="117648486887" fg:w="40115181361"/><text x="73.3025%" y="623.50">mergesort_showcase::single_array_sort::m..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (37,659,188,090 samples, 23.38%)</title><rect x="74.5775%" y="597" width="23.3840%" height="15" fill="rgb(216,46,15)" fg:x="120104480158" fg:w="37659188090"/><text x="74.8275%" y="607.50">mergesort_showcase::single_array_sort..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (35,227,209,574 samples, 21.87%)</title><rect x="76.0876%" y="581" width="21.8739%" height="15" fill="rgb(250,74,19)" fg:x="122536458674" fg:w="35227209574"/><text x="76.3376%" y="591.50">mergesort_showcase::single_array_so..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (32,876,740,361 samples, 20.41%)</title><rect x="77.5471%" y="565" width="20.4144%" height="15" fill="rgb(249,42,33)" fg:x="124886927887" fg:w="32876740361"/><text x="77.7971%" y="575.50">mergesort_showcase::single_array..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (30,336,489,576 samples, 18.84%)</title><rect x="79.1244%" y="549" width="18.8371%" height="15" fill="rgb(242,149,17)" fg:x="127427178672" fg:w="30336489576"/><text x="79.3744%" y="559.50">mergesort_showcase::single_ar..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (27,653,532,482 samples, 17.17%)</title><rect x="80.7904%" y="533" width="17.1711%" height="15" fill="rgb(244,29,21)" fg:x="130110135766" fg:w="27653532482"/><text x="81.0404%" y="543.50">mergesort_showcase::single_..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (57,448,299,370 samples, 35.67%)</title><rect x="62.2906%" y="725" width="35.6719%" height="15" fill="rgb(220,130,37)" fg:x="100316843725" fg:w="57448299370"/><text x="62.5406%" y="735.50">mergesort_showcase::single_array_sort::merge_sort</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (54,824,222,174 samples, 34.04%)</title><rect x="63.9200%" y="709" width="34.0425%" height="15" fill="rgb(211,67,2)" fg:x="102940920921" fg:w="54824222174"/><text x="64.1700%" y="719.50">mergesort_showcase::single_array_sort::merge_sort</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (52,246,133,069 samples, 32.44%)</title><rect x="65.5208%" y="693" width="32.4416%" height="15" fill="rgb(235,68,52)" fg:x="105519010026" fg:w="52246133069"/><text x="65.7708%" y="703.50">mergesort_showcase::single_array_sort::merge_sort</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (49,784,762,037 samples, 30.91%)</title><rect x="67.0492%" y="677" width="30.9133%" height="15" fill="rgb(246,142,3)" fg:x="107980381058" fg:w="49784762037"/><text x="67.2992%" y="687.50">mergesort_showcase::single_array_sort::merge_sort</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (47,463,740,847 samples, 29.47%)</title><rect x="68.4904%" y="661" width="29.4721%" height="15" fill="rgb(241,25,7)" fg:x="110301402248" fg:w="47463740847"/><text x="68.7404%" y="671.50">mergesort_showcase::single_array_sort::merge_so..</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (44,964,275,174 samples, 27.92%)</title><rect x="70.0424%" y="645" width="27.9200%" height="15" fill="rgb(242,119,39)" fg:x="112800867921" fg:w="44964275174"/><text x="70.2924%" y="655.50">mergesort_showcase::single_array_sort::merge_..</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (117,144,949,970 samples, 72.74%)</title><rect x="25.2233%" y="773" width="72.7398%" height="15" fill="rgb(241,98,45)" fg:x="40621341315" fg:w="117144949970"/><text x="25.4733%" y="783.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (62,967,230,512 samples, 39.10%)</title><rect x="58.8644%" y="757" width="39.0988%" height="15" fill="rgb(254,28,30)" fg:x="94799060773" fg:w="62967230512"/><text x="59.1144%" y="767.50">mergesort_showcase::single_array_sort::merge_sort</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (60,168,111,792 samples, 37.36%)</title><rect x="60.6025%" y="741" width="37.3607%" height="15" fill="rgb(241,142,54)" fg:x="97598179493" fg:w="60168111792"/><text x="60.8525%" y="751.50">mergesort_showcase::single_array_sort::merge_sort</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (117,147,173,919 samples, 72.74%)</title><rect x="25.2233%" y="789" width="72.7412%" height="15" fill="rgb(222,85,15)" fg:x="40621341315" fg:w="117147173919"/><text x="25.4733%" y="799.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>do_mprotect_pkey (23,092,099 samples, 0.01%)</title><rect x="97.9700%" y="693" width="0.0143%" height="15" fill="rgb(210,85,47)" fg:x="157777290527" fg:w="23092099"/><text x="98.2200%" y="703.50"></text></g><g><title>__mprotect (23,113,754 samples, 0.01%)</title><rect x="97.9700%" y="773" width="0.0144%" height="15" fill="rgb(224,206,25)" fg:x="157777290527" fg:w="23113754"/><text x="98.2200%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (23,113,754 samples, 0.01%)</title><rect x="97.9700%" y="757" width="0.0144%" height="15" fill="rgb(243,201,19)" fg:x="157777290527" fg:w="23113754"/><text x="98.2200%" y="767.50"></text></g><g><title>do_syscall_64 (23,113,754 samples, 0.01%)</title><rect x="97.9700%" y="741" width="0.0144%" height="15" fill="rgb(236,59,4)" fg:x="157777290527" fg:w="23113754"/><text x="98.2200%" y="751.50"></text></g><g><title>x64_sys_call (23,113,754 samples, 0.01%)</title><rect x="97.9700%" y="725" width="0.0144%" height="15" fill="rgb(254,179,45)" fg:x="157777290527" fg:w="23113754"/><text x="98.2200%" y="735.50"></text></g><g><title>__x64_sys_mprotect (23,113,754 samples, 0.01%)</title><rect x="97.9700%" y="709" width="0.0144%" height="15" fill="rgb(226,14,10)" fg:x="157777290527" fg:w="23113754"/><text x="98.2200%" y="719.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (117,200,215,999 samples, 72.77%)</title><rect x="25.2122%" y="805" width="72.7741%" height="15" fill="rgb(244,27,41)" fg:x="40603366764" fg:w="117200215999"/><text x="25.4622%" y="815.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>std::sys::pal::unix::stack_overflow::imp::make_handler (35,067,529 samples, 0.02%)</title><rect x="97.9645%" y="789" width="0.0218%" height="15" fill="rgb(235,35,32)" fg:x="157768515234" fg:w="35067529"/><text x="98.2145%" y="799.50"></text></g><g><title>start_thread (117,233,087,473 samples, 72.79%)</title><rect x="25.1955%" y="821" width="72.7945%" height="15" fill="rgb(218,68,31)" fg:x="40576553108" fg:w="117233087473"/><text x="25.4455%" y="831.50">start_thread</text></g><g><title>clone3 (117,356,694,136 samples, 72.87%)</title><rect x="25.1231%" y="837" width="72.8713%" height="15" fill="rgb(207,120,37)" fg:x="40459881205" fg:w="117356694136"/><text x="25.3731%" y="847.50">clone3</text></g><g><title>mergesort_showcase::single_array_sort::merge_sort (3,152,977,995 samples, 1.96%)</title><rect x="98.0017%" y="837" width="1.9578%" height="15" fill="rgb(227,98,0)" fg:x="157828341532" fg:w="3152977995"/><text x="98.2517%" y="847.50">m..</text></g><g><title>compare_sorts-4 (160,783,289,716 samples, 99.84%)</title><rect x="0.1233%" y="853" width="99.8365%" height="15" fill="rgb(207,7,3)" fg:x="198557833" fg:w="160783289716"/><text x="0.3733%" y="863.50">compare_sorts-4</text></g><g><title>_start (46,470,402 samples, 0.03%)</title><rect x="99.9598%" y="837" width="0.0289%" height="15" fill="rgb(206,98,19)" fg:x="160981847549" fg:w="46470402"/><text x="100.2098%" y="847.50"></text></g><g><title>_dl_start (46,470,402 samples, 0.03%)</title><rect x="99.9598%" y="821" width="0.0289%" height="15" fill="rgb(217,5,26)" fg:x="160981847549" fg:w="46470402"/><text x="100.2098%" y="831.50"></text></g><g><title>_dl_sysdep_start (46,470,402 samples, 0.03%)</title><rect x="99.9598%" y="805" width="0.0289%" height="15" fill="rgb(235,190,38)" fg:x="160981847549" fg:w="46470402"/><text x="100.2098%" y="815.50"></text></g><g><title>dl_main (46,470,402 samples, 0.03%)</title><rect x="99.9598%" y="789" width="0.0289%" height="15" fill="rgb(247,86,24)" fg:x="160981847549" fg:w="46470402"/><text x="100.2098%" y="799.50"></text></g><g><title>_dl_relocate_object (46,470,402 samples, 0.03%)</title><rect x="99.9598%" y="773" width="0.0289%" height="15" fill="rgb(205,101,16)" fg:x="160981847549" fg:w="46470402"/><text x="100.2098%" y="783.50"></text></g><g><title>mprotect (19,366,980 samples, 0.01%)</title><rect x="99.9766%" y="757" width="0.0120%" height="15" fill="rgb(246,168,33)" fg:x="161008950971" fg:w="19366980"/><text x="100.2266%" y="767.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (19,366,980 samples, 0.01%)</title><rect x="99.9766%" y="741" width="0.0120%" height="15" fill="rgb(231,114,1)" fg:x="161008950971" fg:w="19366980"/><text x="100.2266%" y="751.50"></text></g><g><title>do_syscall_64 (19,366,980 samples, 0.01%)</title><rect x="99.9766%" y="725" width="0.0120%" height="15" fill="rgb(207,184,53)" fg:x="161008950971" fg:w="19366980"/><text x="100.2266%" y="735.50"></text></g><g><title>x64_sys_call (19,366,980 samples, 0.01%)</title><rect x="99.9766%" y="709" width="0.0120%" height="15" fill="rgb(224,95,51)" fg:x="161008950971" fg:w="19366980"/><text x="100.2266%" y="719.50"></text></g><g><title>__x64_sys_mprotect (19,366,980 samples, 0.01%)</title><rect x="99.9766%" y="693" width="0.0120%" height="15" fill="rgb(212,188,45)" fg:x="161008950971" fg:w="19366980"/><text x="100.2266%" y="703.50"></text></g><g><title>do_mprotect_pkey (19,366,980 samples, 0.01%)</title><rect x="99.9766%" y="677" width="0.0120%" height="15" fill="rgb(223,154,38)" fg:x="161008950971" fg:w="19366980"/><text x="100.2266%" y="687.50"></text></g><g><title>mprotect_fixup (19,366,980 samples, 0.01%)</title><rect x="99.9766%" y="661" width="0.0120%" height="15" fill="rgb(251,22,52)" fg:x="161008950971" fg:w="19366980"/><text x="100.2266%" y="671.50"></text></g><g><title>split_vma (19,366,980 samples, 0.01%)</title><rect x="99.9766%" y="645" width="0.0120%" height="15" fill="rgb(229,209,22)" fg:x="161008950971" fg:w="19366980"/><text x="100.2266%" y="655.50"></text></g><g><title>__split_vma (19,366,980 samples, 0.01%)</title><rect x="99.9766%" y="629" width="0.0120%" height="15" fill="rgb(234,138,34)" fg:x="161008950971" fg:w="19366980"/><text x="100.2266%" y="639.50"></text></g><g><title>anon_vma_clone (19,366,980 samples, 0.01%)</title><rect x="99.9766%" y="613" width="0.0120%" height="15" fill="rgb(212,95,11)" fg:x="161008950971" fg:w="19366980"/><text x="100.2266%" y="623.50"></text></g><g><title>kmem_cache_alloc (19,366,980 samples, 0.01%)</title><rect x="99.9766%" y="597" width="0.0120%" height="15" fill="rgb(240,179,47)" fg:x="161008950971" fg:w="19366980"/><text x="100.2266%" y="607.50"></text></g><g><title>memcg_slab_post_alloc_hook (19,366,980 samples, 0.01%)</title><rect x="99.9766%" y="581" width="0.0120%" height="15" fill="rgb(240,163,11)" fg:x="161008950971" fg:w="19366980"/><text x="100.2266%" y="591.50"></text></g><g><title>gnuplot (64,709,639 samples, 0.04%)</title><rect x="99.9598%" y="853" width="0.0402%" height="15" fill="rgb(236,37,12)" fg:x="160981847549" fg:w="64709639"/><text x="100.2098%" y="863.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="837" width="0.0113%" height="15" fill="rgb(232,164,16)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="847.50"></text></g><g><title>do_syscall_64 (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="821" width="0.0113%" height="15" fill="rgb(244,205,15)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="831.50"></text></g><g><title>x64_sys_call (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="805" width="0.0113%" height="15" fill="rgb(223,117,47)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="815.50"></text></g><g><title>__x64_sys_execve (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="789" width="0.0113%" height="15" fill="rgb(244,107,35)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="799.50"></text></g><g><title>do_execveat_common.isra.0 (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="773" width="0.0113%" height="15" fill="rgb(205,140,8)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="783.50"></text></g><g><title>bprm_execve (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="757" width="0.0113%" height="15" fill="rgb(228,84,46)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="767.50"></text></g><g><title>bprm_execve.part.0 (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="741" width="0.0113%" height="15" fill="rgb(254,188,9)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="751.50"></text></g><g><title>exec_binprm (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="725" width="0.0113%" height="15" fill="rgb(206,112,54)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="735.50"></text></g><g><title>search_binary_handler (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="709" width="0.0113%" height="15" fill="rgb(216,84,49)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="719.50"></text></g><g><title>load_elf_binary (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="693" width="0.0113%" height="15" fill="rgb(214,194,35)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="703.50"></text></g><g><title>load_elf_interp.constprop.0 (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="677" width="0.0113%" height="15" fill="rgb(249,28,3)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="687.50"></text></g><g><title>elf_map (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="661" width="0.0113%" height="15" fill="rgb(222,56,52)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="671.50"></text></g><g><title>vm_mmap (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="645" width="0.0113%" height="15" fill="rgb(245,217,50)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="655.50"></text></g><g><title>vm_mmap_pgoff (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="629" width="0.0113%" height="15" fill="rgb(213,201,24)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="639.50"></text></g><g><title>do_mmap (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="613" width="0.0113%" height="15" fill="rgb(248,116,28)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="623.50"></text></g><g><title>mmap_region (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="597" width="0.0113%" height="15" fill="rgb(219,72,43)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="607.50"></text></g><g><title>__mmap_region (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="581" width="0.0113%" height="15" fill="rgb(209,138,14)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="591.50"></text></g><g><title>perf_event_mmap (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="565" width="0.0113%" height="15" fill="rgb(222,18,33)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="575.50"></text></g><g><title>perf_event_mmap_event (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="549" width="0.0113%" height="15" fill="rgb(213,199,7)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="559.50"></text></g><g><title>should_failslab (18,239,237 samples, 0.01%)</title><rect x="99.9887%" y="533" width="0.0113%" height="15" fill="rgb(250,110,10)" fg:x="161028317951" fg:w="18239237"/><text x="100.2387%" y="543.50"></text></g><g><title>all (161,046,584,350 samples, 100%)</title><rect x="0.0000%" y="869" width="100.0000%" height="15" fill="rgb(248,123,6)" fg:x="0" fg:w="161046584350"/><text x="0.2500%" y="879.50"></text></g></svg></svg>